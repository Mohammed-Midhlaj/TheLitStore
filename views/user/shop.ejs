    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop - TheLitStore</title>
    <link rel="stylesheet" href="/css/user/shop.css">
    <link rel="stylesheet" href="/css/user/header.css">
        <style>
            /* Shop Container Styles */
            .shop-container {
                max-width: 1200px;
                margin: 0 auto;
                padding: 20px;
            }

            /* Filter Section Styles */
            .filter-section {
                display: flex;
                flex-wrap: wrap;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 20px;
                padding-bottom: 15px;
                border-bottom: 1px solid #e1e1e1;
            }

            .sort-by {
                display: flex;
                align-items: center;
                gap: 10px;
            }

            .sort-by select {
                padding: 8px 12px;
                border: 1px solid #e1e1e1;
                border-radius: 4px;
                background-color: #fff;
                cursor: pointer;
            }

            #filterBtn {
                font-weight: bold;
                letter-spacing: 1px;
                background-color: #000;
                color: white;
            }

            #filterBtn:hover {
                background-color: white;
                color: black;
            }

            /* Filter Button Styles */
            .filter-options {
                margin: 20px 0;
            }

            .product-type-filter button {
                padding: 8px 16px;
                background-color: #f5f5f5;
                border: 1px solid #ddd;
                cursor: pointer;
                font-size: 14px;
            }

            /* Filter Sidebar Styles */
            .filter-sidebar {
                position: fixed;
                top: 0;
                right: -350px;
                /* Hide initially */
                width: 350px;
                height: 100%;
                background-color: #fff;
                border-left: 1px solid #ddd;
                transition: right 0.3s ease;
                z-index: 1000;
                overflow-y: auto;
            }

            .filter-sidebar.active {
                right: 0;
            }

            .filter-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 20px;
                border-bottom: 1px solid #ddd;
            }

            .filter-header h2 {
                margin: 0;
                font-size: 20px;
            }

            #closeFilterBtn {
                background: none;
                border: none;
                font-size: 24px;
                cursor: pointer;
            }

            .filter-content {
                padding: 20px;
            }

            .filter-section {
                margin-bottom: 25px;
            }

            .filter-section h3 {
                margin-bottom: 15px;
                font-size: 16px;
                position: relative;
            }

            .filter-section h3:after {
                content: '>';
                position: absolute;
                right: 0;
                transform: rotate(90deg);
            }

            .filter-items {
                display: flex;
                flex-direction: column;
                gap: 10px;
            }

            .filter-items label {
                display: flex;
                align-items: center;
                gap: 10px;
                cursor: pointer;
            }

            .price-range-btn {
                background-color: #000000;
                color: white;
                font-size: medium;
                margin: 10px;
                width: 120px;
                height: 40px;
                border-radius: 6px;
                border-color: white;
            }

            .price-range-btn:hover {
                transform: scale(1.05);
                background-color: white;
                color: black;
                border-color: black;
            }

            /* Price range slider */
            .price-slider {
                margin-top: 15px;
            }

            .price-values {
                display: flex;
                justify-content: space-between;
                margin-top: 10px;
            }

            /* Filter footer */
            .filter-footer {
                position: sticky;
                bottom: 0;
                display: flex;
                padding: 15px 20px;
                background-color: #fff;
                border-top: 1px solid #ddd;
            }

            #clearBtn {
                flex: 1;
                padding: 12px;
                background-color: #f5f5f5;
                border: 1px solid #ddd;
                margin-right: 10px;
                cursor: pointer;
            }

            #applyBtn {
                flex: 1;
                padding: 12px;
                background-color: #222;
                color: white;
                border: none;
                cursor: pointer;
            }

            /* Overlay for background */
            .filter-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.5);
                z-index: 999;
                display: none;
            }

            .filter-overlay.active {
                display: block;
            }

            .category-filter,
            .product-type-filter {
                display: flex;
                gap: 10px;
            }

            .category-filter button,
            .product-type-filter button {
                padding: 8px 15px;
                border: 1px solid #e1e1e1;
                border-radius: 4px;
                background-color: #fff;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .category-filter button.active,
            .product-type-filter button.active {
                background-color: #000;
                color: #fff;
            }

            .filter-mobile {
                display: none;
            }

            .product-count {
                margin-top: 10px;
                color: #666;
            }

            /* Products Grid Styles */
            .products-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
                gap: 24px;
                margin-bottom: 30px;
            }

            .product-card {
                display: flex;
                flex-direction: column;
                background: #fff;
                border-radius: 10px;
                overflow: hidden;
                box-shadow: 0 4px 12px rgba(0,0,0,0.08);
                transition: transform 0.2s;
                height: 100%;
            }

            .product-card:hover {
                transform: translateY(-4px) scale(1.02);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            }

            .product-image {
                width: 100%;
                height: 260px;
                background: #f7f7f7;
                display: flex;
                align-items: center;
                justify-content: center;
                overflow: hidden;
            }

            .product-image img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.2s;
            }

            .product-info {
                flex: 1;
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                padding: 16px;
            }

            .product-title, .product-name {
                font-size: 1.1rem;
                font-weight: 600;
                margin-bottom: 8px;
                color: #222;
            }

            .product-price {
                font-weight: bold;
                color: #e74c3c;
                margin-bottom: 8px;
            }

            .product-description {
                margin-bottom: 10px;
            }

            .product-actions {
                display: flex;
                gap: 10px;
                margin-top: 10px;
            }

            .add-to-wishlist {
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
                background: white;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .add-to-wishlist:hover {
                background: #f5f5f5;
            }

            .add-to-wishlist.active {
                color: red;
                border-color: red;
            }

            .add-to-wishlist.active i {
                color: red;
            }

            .product-card-link {
                display: block;
                color: inherit;
                text-decoration: none;
            }
            .product-card-link:visited {
                color: inherit;
            }
            .product-card-link:hover .product-card {
                box-shadow: 0 4px 16px rgba(0,0,0,0.12);
                transform: translateY(-2px) scale(1.01);
            }

            /* Pagination Styles */
            .pagination {
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 5px;
                margin-top: 30px;
            }

            .page-prev,
            .page-next,
            .page-number {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 35px;
                height: 35px;
                border: 1px solid #e1e1e1;
                background-color: #fff;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .page-number.active {
                background-color: #000;
                color: #fff;
            }

            .page-prev.disabled,
            .page-next.disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

            /* Responsive Styles */
            @media (max-width: 992px) {
                .products-grid {
                    grid-template-columns: repeat(3, 1fr);
                }
            }

            @media (max-width: 768px) {
                .products-grid {
                    grid-template-columns: repeat(2, 1fr);
                }

                .filter-options {
                    width: 100%;
                    justify-content: space-between;
                }
            }

            @media (max-width: 576px) {
                .filter-section {
                    flex-direction: column;
                    align-items: flex-start;
                }

                .filter-options {
                    display: none;
                }

                .filter-mobile {
                    display: flex;
                    justify-content: space-between;
                    width: 100%;
                    align-items: center;
                    margin: 15px 0;
                }

                #filter-button {
                    display: flex;
                    align-items: center;
                    gap: 5px;
                    padding: 8px 15px;
                    border: 1px solid #e1e1e1;
                    border-radius: 4px;
                    background-color: #fff;
                    cursor: pointer;
                }

                .filter-icon {
                    width: 18px;
                    height: 18px;
                    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='3' y1='6' x2='21' y2='6'%3E%3C/line%3E%3Cline x1='3' y1='12' x2='21' y2='12'%3E%3C/line%3E%3Cline x1='3' y1='18' x2='21' y2='18'%3E%3C/line%3E%3C/svg%3E");
                    background-size: contain;
                    background-repeat: no-repeat;
                }

                .view-options {
                    display: flex;
                    gap: 10px;
                }

                .grid-view,
                .list-view {
                    width: 30px;
                    height: 30px;
                    border: 1px solid #e1e1e1;
                    border-radius: 4px;
                    background-color: #fff;
                    cursor: pointer;
                    background-position: center;
                    background-repeat: no-repeat;
                }

                .grid-view {
                    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='3' width='7' height='7'%3E%3C/rect%3E%3Crect x='14' y='3' width='7' height='7'%3E%3C/rect%3E%3Crect x='3' y='14' width='7' height='7'%3E%3C/rect%3E%3Crect x='14' y='14' width='7' height='7'%3E%3C/rect%3E%3C/svg%3E");
                }

                .list-view {
                    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='8' y1='6' x2='21' y2='6'%3E%3C/line%3E%3Cline x1='8' y1='12' x2='21' y2='12'%3E%3C/line%3E%3Cline x1='8' y1='18' x2='21' y2='18'%3E%3C/line%3E%3Cline x1='3' y1='6' x2='3.01' y2='6'%3E%3C/line%3E%3Cline x1='3' y1='12' x2='3.01' y2='12'%3E%3C/line%3E%3Cline x1='3' y1='18' x2='3.01' y2='18'%3E%3C/line%3E%3C/svg%3E");
                }

                .grid-view.active,
                .list-view.active {
                    background-color: #f0f0f0;
                }
            }
        </style>
    </head>

    <body>
    <%- include("../partials/user/header", { isAuthenticated: typeof isAuthenticated !== 'undefined' ? isAuthenticated : false }) %>

        <div class="shop-container">
            <!-- Filter and Sort Section -->
            <div class="filter-section">
            <h3>Filter Products</h3>
            <div class="filter-options">
                <div class="filter-group">
                    <label for="category">Category</label>
                    <select id="category">
                        <option value="">All Categories</option>
                        <% if (typeof categories !== 'undefined' && categories && categories.length > 0) { %>
                            <% categories.forEach(function(category) { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="price">Price Range</label>
                    <select id="price">
                        <option value="">All Prices</option>
                        <option value="0-50">₹0 - ₹50</option>
                        <option value="51-100">₹51 - ₹100</option>
                        <option value="101+">₹101+</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="sort">Sort By</label>
                    <select id="sort">
                        <option value="newest">Newest</option>
                        <option value="price-low">Price: Low to High</option>
                        <option value="price-high">Price: High to Low</option>
                    </select>
                </div>
                </div>
            </div>

            <!-- Products Grid -->
            <div class="products-grid">
            <% if (typeof products !== 'undefined' && products && products.length > 0) { %>
                <% products.forEach(function(product) { %>
                    <a href="/productDetails?productId=<%= product._id %>" class="product-card-link">
                      <div class="product-card">
                          <div class="product-image">
                              <img src="<%= product.image || '/uploads/re-image/' + product.productImage[0] %>" alt="<%= product.name || product.productName %>">
                          </div>
                          <div class="product-info">
                              <h3 class="product-title"><%= product.name || product.productName %></h3>
                              <p class="product-price">₹<%= product.price || product.salePrice %></p>
                              <p class="product-description"><%= product.description || '' %></p>
                              <div class="product-actions" onclick="event.stopPropagation();">
                                  <button class="add-to-cart" onclick="addToCart('<%= product._id %>'); event.stopPropagation(); return false;">Add to Cart</button>
                                  <button class="add-to-wishlist <%= user && user.wishlist && user.wishlist.includes(product._id) ? 'active' : '' %>" 
                                          onclick="addToWishlist('<%= product._id %>'); event.stopPropagation(); return false;"
                                          data-product-id="<%= product._id %>">
                                      <i class="fas fa-heart"></i>
                                  </button>
                              </div>
                          </div>
                      </div>
                    </a>
                <% }); %>
            <% } else { %>
                <p>No products found.</p>
            <% } %>
            </div>

            <!-- Pagination -->
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <button class="page-prev" onclick="location.href='/shop?page=<%= currentPage - 1 %>'">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
                            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="15 18 9 12 15 6"></polyline>
                        </svg>
                    </button>
                <% } else { %>
                    <button class="page-prev disabled" disabled>
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"
                            fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                            stroke-linejoin="round">
                            <polyline points="15 18 9 12 15 6"></polyline>
                        </svg>
                    </button>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <% if (currentPage === i) { %>
                        <button class="page-number active" onclick="location.href='/shop?page=<%= i %>'">
                            <%= i %>
                        </button>
                    <% } else { %>
                        <button class="page-number" onclick="location.href='/shop?page=<%= i %>'">
                            <%= i %>
                        </button>
                    <% } %>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <button class="page-next" onclick="location.href='/shop?page=<%= currentPage + 1 %>'">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                            viewBox="0 0 24 24" fill="none" stroke="currentColor"
                            stroke-width="2" stroke-linecap="round"
                            stroke-linejoin="round">
                            <polyline points="9 18 15 12 9 6"></polyline>
                        </svg>
                    </button>
                <% } else { %>
                    <button class="page-next disabled" disabled>
                        <svg xmlns="http://www.w3.org/2000/svg" width="20"
                            height="20" viewBox="0 0 24 24" fill="none"
                            stroke="currentColor" stroke-width="2"
                            stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="9 18 15 12 9 6"></polyline>
                        </svg>
                    </button>
                <% } %>
            </div>

        </div>

        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
        // Add to cart functionality
        function addToCart(productId) {
            fetch("/addToCart", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ productId })
            })
            .then(response => response.json())
            .then(result => {
                if (result.status) {
                            Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: result.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                        } else {
                            Swal.fire({
                        icon: "info",
                        title: "Notice",
                        text: result.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                }
            })
            .catch(error => {
                console.error("Error adding to cart:", error);
                        Swal.fire({
                            icon: "error",
                    title: "Error",
                    text: "Something went wrong. Please try again later."
                });
            });
        }

        // Add to wishlist functionality
        function addToWishlist(productId) {
            <% if (!user) { %>
                Swal.fire({
                    title: 'Please Sign In',
                    text: 'You need to be signed in to add items to your wishlist.',
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonText: 'Sign In',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/login';
                    }
                });
                return;
            <% } %>

            fetch('/addToWishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId: productId })
            })
            .then(response => {
                if (response.ok || response.status === 409) {
                    return response.json().then(data => ({
                        ...data,
                        isAlreadyInWishlist: response.status === 409
                    }));
                }
                throw new Error('Network response was not ok');
            })
            .then(data => {
                const button = document.querySelector(`[data-product-id="${productId}"]`);
                
                if (data.isAlreadyInWishlist) {
                    button.classList.add('active');
                    Swal.fire({
                        icon: 'info',
                        title: 'Already in Wishlist',
                        text: data.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                } else if (data.success) {
                    button.classList.toggle('active');
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Wishlist',
                        text: data.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                } else {
                    throw new Error(data.message || 'Failed to add to wishlist');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'An error occurred while updating your wishlist.'
                });
            });
        }

        // Filter functionality
        function updateUrlParameter(key, value) {
            const searchParams = new URLSearchParams(window.location.search);
            if (value) {
                searchParams.set(key, value);
            } else {
                searchParams.delete(key);
            }
            return `${window.location.pathname}?${searchParams.toString()}`;
        }

        // Add event listeners for filter functionality
        document.querySelectorAll('.filter-group select').forEach(select => {
            select.addEventListener('change', () => {
                let url = window.location.pathname;
                const params = new URLSearchParams(window.location.search);

                // Handle category filter
                if (select.id === 'category') {
                    if (select.value) {
                        params.set('category', select.value);
                    } else {
                        params.delete('category');
                    }
                }

                // Handle price range filter
                if (select.id === 'price') {
                    if (select.value) {
                        const [min, max] = select.value.split('-');
                        params.set('minPrice', min);
                        params.set('maxPrice', max || '9999999'); // Use a high number for 101+
                    } else {
                        params.delete('minPrice');
                        params.delete('maxPrice');
                    }
                }

                // Handle sort
                if (select.id === 'sort') {
                    if (select.value) {
                        params.set('sort', select.value);
                    } else {
                        params.delete('sort');
                    }
                }

                // Update page parameter
                params.set('page', '1'); // Reset to first page when filtering

                // Redirect with new parameters
                window.location.href = `${url}?${params.toString()}`;
            });
        });

        // Set initial filter values from URL
        window.addEventListener('load', () => {
            const params = new URLSearchParams(window.location.search);
            
            // Set category
            if (params.has('category')) {
                document.getElementById('category').value = params.get('category');
            }
            
            // Set price range
            if (params.has('minPrice') && params.has('maxPrice')) {
                const min = params.get('minPrice');
                const max = params.get('maxPrice');
                const priceSelect = document.getElementById('price');
                if (max === '9999999') {
                    priceSelect.value = `${min}+`;
                } else {
                    priceSelect.value = `${min}-${max}`;
                }
            }
            
            // Set sort
            if (params.has('sort')) {
                document.getElementById('sort').value = params.get('sort');
            }
        });
        </script>
    </body>

    </html>