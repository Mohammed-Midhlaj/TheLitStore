<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TheLitStore - Checkout</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, Helvetica, sans-serif;
        }

        body {
            background-color: #f8f8f8;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Back link */
        .back-link {
            margin-bottom: 20px;
        }

        .back-link a {
            color: #333;
            text-decoration: none;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        /* Logo */
        .logo {
            text-align: center;
        }

        .logo img {
            max-width: 100px;
            height: 100%;
        }

        /* Checkout title */
        .checkout-title {
            text-align: center;
            margin-bottom: 40px;
            font-weight: normal;
            font-size: 24px;
        }

        /* Main checkout container */
        .checkout-container {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
        }

        .checkout-details {
            flex: 1 1 60%;
            min-width: 300px;
        }

        .order-summary {
            flex: 1 1 30%;
            min-width: 300px;
        }

        /* Info sections */
        .info-section {
            background-color: #fff;
            border-radius: 4px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            position: relative;
        }

        .section-header h2 {
            font-size: 18px;
            font-weight: 500;
        }

        .edit-btn {
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            font-size: 12px;
            font-weight: bold;
        }

        .section-content {
            font-size: 14px;
        }


        /* Shipped by */
        .shipped-by {
            font-size: 12px;
            color: #666;
            position: absolute;
            right: 0;
            top: 0;
        }

        .shipper {
            font-weight: bold;
        }

        /* Delivery type */
        .delivery-type {
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #eee;
        }

        /* Order details */
        .order-details-section .section-header {
            margin-bottom: 20px;
        }

        .item-count {
            font-size: 14px;
            color: #666;
        }

        .order-item {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
        }

        .item-image img {
            width: 100px;
            height: 120px;
            object-fit: cover;
            border-radius: 4px;
        }

        .item-details {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .item-name {
            font-weight: bold;
        }

        .delivery-option {
            background-color: #f9f9f9;
            padding: 15px;
            border-radius: 4px;
        }

        .delivery-option-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        /* Payment section */
        .payment-question {
            margin-bottom: 15px;
            font-weight: bold;
        }

        .payment-options {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .payment-option {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .payment-option.selected {
            background-color: #f9f9f9;
        }

        .card-icons {
            margin-left: auto;
            display: flex;
            gap: 5px;
        }

        .payment-icon {
            height: 20px;
            margin-left: auto;
        }

        .payment-note {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }

        /* Data security */
        .data-security {
            text-align: center;
            font-size: 12px;
            color: #666;
            margin-top: 20px;
        }

        /* Order summary */
        .summary-section {
            background-color: #fff;
            border-radius: 4px;
            padding: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .discount-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .discount-section h3 {
            font-size: 16px;
            font-weight: 500;
        }

        .apply-discount-btn {
            background: none;
            border: none;
            color: #ff0000;
            cursor: pointer;
            font-weight: bold;
        }

        .price-breakdown {
            margin-bottom: 20px;
        }

        .price-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-size: 14px;
        }

        .price-row.total {
            font-weight: bold;
            font-size: 16px;
            border-top: 1px solid #eee;
            padding-top: 10px;
            margin-top: 10px;
        }

        .complete-purchase-btn {
            width: 100%;
            padding: 15px;
            background-color: #333;
            color: #fff;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            margin-bottom: 20px;
        }

        .payment-info {
            font-size: 12px;
            color: #666;
            margin-bottom: 20px;
        }

        .payment-method {
            margin-bottom: 10px;
        }

        .delivery-policy {
            border-top: 1px solid #eee;
            border-bottom: 1px solid #eee;
            padding: 15px 0;
            margin-bottom: 20px;
        }

        .policy-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .cancel-order-btn {
            width: 100%;
            padding: 15px;
            background-color: #f1f1f1;
            color: #333;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
        }

        /* Responsive styles */
        @media (max-width: 768px) {
            .checkout-container {
                flex-direction: column;
            }

            .order-summary {
                order: -1;
            }

            .logo img {
                max-width: 80px;
            }

            .checkout-title {
                font-size: 20px;
                margin-bottom: 20px;
            }

            .info-section {
                padding: 15px;
            }

            .section-header h2 {
                font-size: 16px;
            }

            .item-image img {
                width: 80px;
                height: 100px;
            }

            .complete-purchase-btn,
            .cancel-order-btn {
                padding: 12px;
                font-size: 14px;
            }

            .back-link {
                margin-bottom: 10px;
            }
        }

        /* Mobile specific styles */
        @media (max-width: 480px) {
            .container {
                padding: 10px;
            }

            .checkout-title {
                font-size: 18px;
                margin-bottom: 15px;
            }

            .section-header {
                margin-bottom: 10px;
            }

            .section-content {
                font-size: 13px;
            }

            .payment-option {
                padding: 8px;
            }

            .price-row {
                font-size: 13px;
            }

            .price-row.total {
                font-size: 15px;
            }
        }

        /* Add these styles to your existing CSS */
        .coupon-select {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .coupon-select select {
            flex: 1;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
        }

        .apply-discount-btn {
            padding: 8px 15px;
            background-color: #d73333;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .apply-discount-btn:hover:not(:disabled) {
            background-color: #b32929;
        }

        .apply-discount-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        #couponMessage {
            font-size: 14px;
            margin-top: 5px;
        }

        #couponMessage.success {
            color: #28a745;
        }

        #couponMessage.error {
            color: #dc3545;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="back-link">
            <a href="/cart"><i class="fas fa-arrow-left"></i> Back to shopping bag</a>
        </div>

        <!-- Logo -->
        <div class="logo">
            <a href="/">
                <img src="images/AestheLogo-red.png" alt="Aesthé Logo">
            </a>
        </div>

        <!-- Checkout Title -->
        <h1 class="checkout-title">Checkout</h1>

        <!-- Main content wrapped in one form -->
        <form action="/placeOrder" method="POST" id="checkoutForm">
            <div class="checkout-container">
                <div class="checkout-details">
                    <div class="info-section">
                        <div class="section-header">
                            <h2><strong>My information</strong></h2>
                            <a href="/userProfile">
                                <button type="button" class="edit-btn">EDIT</button>
                            </a>
                        </div>
                        <div class="section-content">
                            <p class="customer-name">
                                <%= user.name %>
                            </p>
                            <p class="customer-email">
                                <%= user.email %>
                            </p>
                        </div>
                    </div>

                    <!-- Billing Address Section -->
                    <div class="info-section">
                        <div class="section-header">
                            <h2><strong>Billing Address</strong></h2>
                            <a href="/address">
                                <button type="button" class="edit-btn">EDIT</button>
                            </a>
                        </div>
                        <div class="section-content">
                            <% if (addresses && addresses.length> 0 && addresses[0].address &&
                                addresses[0].address.length > 0) { %>
                                <% addresses[0].address.forEach(function(userAddress, index) { %>
                                    <label class="address-label"
                                        style="display:block; margin-bottom:10px; border:1px solid #ccc; padding:10px; border-radius:4px;">
                                        <input type="radio" name="billingAddress" value="<%= userAddress._id %>"
                                            <%=index===0 ? "checked" : "" %>>
                                        <div class="address-details">
                                            <p><strong>
                                                    <%= userAddress.label || "Address" %>
                                                </strong></p>
                                            <p>
                                                <%= userAddress.name %>
                                            </p>
                                            <p>
                                                <%= userAddress.phone %>
                                            </p>
                                            <p>
                                                <%= userAddress.landMark %>
                                            </p>
                                            <p>
                                                <%= userAddress.city %>
                                                    <%= userAddress.pincode %>
                                            </p>
                                            <p>
                                                <%= userAddress.state %>
                                            </p>
                                        </div>
                                    </label>
                                    <% }); %>
                                        <% } else { %>
                                            <div>
                                                <a href="/address">
                                                    <h3>Add Address</h3>
                                                </a>
                                            </div>
                                            <% } %>
                        </div>
                    </div>

                    <!-- Order Details Section -->
                    <div class="info-section order-details-section">
                        <div class="section-header">
                            <h2><strong>View Order Details</strong></h2>
                            <span class="item-count">
                                <%= cartItems.length %> item<%= cartItems.length> 1 ? 's' : '' %>
                            </span>
                        </div>
                        <div class="section-content">
                            <% cartItems.forEach(item=> { %>
                                <div class="order-item">
                                    <div class="item-image">
                                        <a href="/productDetails?productId=<%= item.productId._id %>">
                                            <img src="/uploads/re-image/<%= item.productId.productImage[0] %>"
                                                alt="<%= item.productId.name %>" width="100" height="120">
                                        </a>
                                    </div>
                                    <div class="item-details">
                                        <p class="item-name">Parcel</p>
                                        <p class="item-count">
                                            <%= item.quantity %> item<%= item.quantity> 1 ? 's' : '' %>
                                        </p>
                                        <p class="checkout-item-price">₹<%= item.price || item.salePrice %></p>
                                    </div>
                                </div>
                                <% }) %>
                                    <div class="delivery-option">
                                        <div class="delivery-option-header">
                                            <h3><strong>Standard Delivery</strong></h3>
                                        </div>
                                        <% if (addresses && addresses.length> 0 && addresses[0].address &&
                                            addresses[0].address.length > 0) {
                                            let defaultAddress = addresses[0].address[0];
                                            %>
                                            <div class="delivery-address" id="deliveryAddressPreview">
                                                <p>
                                                    <%= defaultAddress.name %>
                                                </p>
                                                <p>91+ <%= defaultAddress.phone %>
                                                </p>
                                                <p>
                                                    <%= defaultAddress.landMark %>
                                                </p>
                                                <p>
                                                    <%= defaultAddress.city %>
                                                        <%= defaultAddress.pincode %>
                                            </p>
                                                <p>
                                                    <%= defaultAddress.state %>
                                                </p>
                                                <p><strong>₹149.00 · 2-7 days</strong></p>
                                            </div>
                                            <% } else { %>
                                                <div class="delivery-address">
                                                    <a href="/address">
                                                        <h3>Add Address</h3>
                                                    </a>
                                                </div>
                                                <% } %>
                                    </div>
                        </div>
                    </div>

                    <!-- Payment Section -->
                    <div class="info-section payment-section">
                        <div class="section-header">
                            <h2>Payment</h2>
                        </div>
                        <div class="section-content">
                            <p class="payment-question">How Would you like to pay?</p>
                            <div class="payment-options">
                                <div class="payment-option <%= finalAmount > 1000 ? 'selected' : '' %>">
                                    <input type="radio" id="netbanking" name="payment" value="razorpay" <%= finalAmount > 1000 ? 'checked' : '' %>>
                                    <label for="netbanking">Razorpay</label>
                                </div>
                                <div class="payment-option <%= finalAmount > 1000 ? '' : 'selected' %>">
                                    <input type="radio" id="cod" name="payment" value="cod" <%= finalAmount > 1000 ? 'disabled' : 'checked' %>>
                                    <label for="cod" style="<%= finalAmount > 1000 ? 'color:#aaa;' : '' %>">Cash on delivery</label>
                                    <% if (finalAmount > 1000) { %>
                                        <span style="color:#d73333; font-size:13px; margin-left:10px;">COD not available for orders above ₹1000</span>
                                    <% } %>
                                </div>
                                <p class="payment-note">You pay only cash at time of receiving the order</p>
                            </div>
                        </div>
                    </div>

                    <div class="data-security">
                        <p>All Data are encrypted</p>
                    </div>

                    <!-- Right column - Order summary -->
                    <div class="order-summary">
                        <div class="summary-section">
                            <div class="discount-section">
                                <h3>Available Coupons</h3>
                                <div class="coupon-select">
                                    <select id="couponSelect" class="form-control">
                                        <option value="">Select a coupon</option>
                                        <% if (validCoupons && validCoupons.length > 0) { %>
                                            <% validCoupons.forEach(coupon => { 
                                                const isExpired = new Date(coupon.expireOn) < new Date();
                                            %>
                                                <% if (!isExpired) { %>
                                                    <option value="<%= coupon.name %>" 
                                                            data-offer="<%= coupon.offerPrice %>"
                                                            data-min="<%= coupon.minimumPrice %>">
                                                        <%= coupon.name %> - Get ₹<%= coupon.offerPrice %> off
                                                        (Min. ₹<%= coupon.minimumPrice %>)
                                                    </option>
                                                <% } %>
                                            <% }); %>
                                        <% } else { %>
                                            <option value="" disabled>No coupons available</option>
                                        <% } %>
                                    </select>
                                    <button type="button" id="applyCouponBtn" class="apply-discount-btn" disabled>
                                        Apply
                                    </button>
                                </div>
                                <div id="couponMessage" class="mt-2"></div>
                            </div>
                            <div class="price-breakdown">
                                <div class="price-row">
                                    <span>Subtotal</span>
                                    <span>₹<span id="subtotal"><%= totalPrice %></span></span>
                                </div>
                                <div class="price-row" id="couponDiscountRow" style="display: none;">
                                    <span>Coupon Discount</span>
                                    <span>-₹<span id="couponDiscount">0</span></span>
                                </div>
                                <div class="price-row">
                                    <span>Shipping</span>
                                    <span>₹<span id="shipping"><%= deliveryCharge %></span></span>
                                </div>
                                <div class="price-row total">
                                    <span>Total</span>
                                    <span>₹<span id="totalAmount"><%= finalAmount %></span></span>
                                </div>
                            </div>

                            <!-- Complete Purchase Button inside the form -->
                            <button type="submit" class="complete-purchase-btn">Complete Purchase</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</body>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
// alert('Script loaded!');
console.log('Script loaded!');
document.addEventListener('DOMContentLoaded', function() {
    const addressList = <%- JSON.stringify(addresses && addresses.length > 0 ? addresses[0].address : []) %>;
    const razorpayKey = "<%= process.env.RAZORPAY_KEY_ID %>";
    const finalAmountPaise = Number("<%= finalAmount || 0 %>") * 100;

    // Function to handle Razorpay payment flow
    async function payWithRazorpay() {
        try {
            // Create order on the backend with the final amount
            const response = await fetch('/createOrder', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ amount: finalAmountPaise })
            });
            const order = await response.json();

            var options = {
                key: razorpayKey,
                amount: order.amount,
                currency: order.currency,
                name: "Your Company Name",
                description: "Test Transaction",
                order_id: order.id,
                handler: function (response) {
                    verifyPayment({
                        ...response,
                        orderDetails: placeOrderResult.orderDetails
                    });
                },
                prefill: {
                    name: <%- JSON.stringify(user.name || '') %>,
                    email: <%- JSON.stringify(user.email || '') %>,
                    contact: <%- JSON.stringify(user.phone || '') %>
                },
                theme: { color: "#3399cc" }
            };

            var rzp1 = new Razorpay(options);

            // Payment failure listener using SweetAlert2
            rzp1.on('payment.failed', function (response) {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed!',
                    text: 'Oops, something went wrong. Please try again.'
                }).then(() => {
                    window.location.href = '/order-failed';
                });
            });

            rzp1.open();
        } catch (error) {
            console.error("Error creating order:", error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: 'Could not create order. Please try again.'
            });
        }
    }

    // Function to verify payment and store order with updated payment status
    async function verifyPayment(paymentResponse) {
        try {
            // Verify payment on the backend
            const response = await fetch('/verifyPayment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(paymentResponse)
            });
            const result = await response.json();
            console.log('Payment verification result:', result);

            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Order Placed!',
                    text: 'Your order has been placed successfully.'
                }).then(() => {
                    window.location.href = result.redirect;
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Verification Failed!',
                    text: result.message || 'An error occurred during payment verification.'
                });
            }
        } catch (error) {
            console.error("Error verifying payment:", error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: 'Could not verify payment. Please try again.'
            });
        }
    }

    // Handle form submission
    document.getElementById('checkoutForm').addEventListener('submit', async function(event) {
        console.log('Checkout form submit handler triggered!');
        const formData = new FormData(this);
        const data = Object.fromEntries(formData.entries());
        if (data.payment === 'razorpay') {
            event.preventDefault();
            // Show loading state
            const submitButton = this.querySelector('.complete-purchase-btn');
            const originalText = submitButton.textContent;
            submitButton.disabled = true;
            submitButton.textContent = 'Processing...';
            try {
                // Pass the entire form data to the backend to create the order
                const placeOrderResponse = await fetch('/placeOrder', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                    credentials: 'include'
                });
                const placeOrderResult = await placeOrderResponse.json();
                if (placeOrderResult.status && placeOrderResult.razorpayOrderId) {
                    var options = {
                        key: razorpayKey,
                        amount: placeOrderResult.amount * 100, // Amount in paise
                        currency: 'INR',
                        name: "TheLitStore",
                        description: "Order Payment",
                        order_id: placeOrderResult.razorpayOrderId,
                        handler: function (response) {
                            verifyPayment({
                                ...response,
                                orderDetails: placeOrderResult.orderDetails
                            });
                        },
                        prefill: {
                            name: <%- JSON.stringify(user.name || '') %>,
                            email: <%- JSON.stringify(user.email || '') %>,
                            contact: <%- JSON.stringify(user.phone || '') %>
                        },
                        theme: { color: "#d73333" }
                    };
                    var rzp1 = new Razorpay(options);
                    rzp1.on('payment.failed', function (response) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed!',
                            text: 'Oops, something went wrong. Please try again.'
                        }).then(() => {
                            window.location.href = '/order-failed';
                        });
                    });
                    rzp1.open();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error Placing Order!',
                        text: placeOrderResult.message || 'An unknown error occurred.'
                    });
                }
            } catch (error) {
                console.error('Error placing order:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An unexpected error occurred. Please try again.'
                });
            } finally {
                submitButton.disabled = false;
                submitButton.textContent = originalText;
            }
        }
        // For COD, do not prevent default; let the form submit normally
    });

    // Coupon handling code
    const couponSelect = document.getElementById('couponSelect');
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const couponMessage = document.getElementById('couponMessage');
    const subtotalSpan = document.getElementById('subtotal');
    const couponDiscountSpan = document.getElementById('couponDiscount');
    const couponDiscountRow = document.getElementById('couponDiscountRow');
    const shippingSpan = document.getElementById('shipping');
    const totalAmountSpan = document.getElementById('totalAmount');

    let currentCouponDiscount = 0;
    let currentSubtotal = Number(subtotalSpan.textContent);
    let currentShipping = Number(shippingSpan.textContent);

    function updateFinalAmount() {
        let total = currentSubtotal + currentShipping - currentCouponDiscount;
        totalAmountSpan.textContent = total.toFixed(2);
    }

    couponSelect.addEventListener('change', function() {
        if (this.value) {
            applyCouponBtn.disabled = false;
        } else {
            applyCouponBtn.disabled = true;
            currentCouponDiscount = 0;
            couponDiscountSpan.textContent = '0';
            couponDiscountRow.style.display = 'none';
            updateFinalAmount();
        }
    });

    applyCouponBtn.addEventListener('click', async function() {
        const couponCode = couponSelect.value;
        if (!couponCode) return;

        // Disable button and show loading state
        applyCouponBtn.disabled = true;
        const originalText = applyCouponBtn.textContent;
        applyCouponBtn.textContent = 'Applying...';

        try {
            const response = await fetch('/checkout/apply-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ couponCode: couponCode })
            });
            const result = await response.json();

            couponMessage.className = 'mt-2';
            if (result.status) {
                couponMessage.classList.add('success');
                couponMessage.textContent = result.message;
                currentCouponDiscount = result.coupon.offerPrice;
                couponDiscountSpan.textContent = result.coupon.offerPrice.toFixed(2);
                couponDiscountRow.style.display = '';
                updateFinalAmount();
            } else {
                couponMessage.classList.add('error');
                couponMessage.textContent = result.message;
                currentCouponDiscount = 0;
                couponDiscountSpan.textContent = '0';
                couponDiscountRow.style.display = 'none';
                updateFinalAmount();
            }
        } catch (error) {
            console.error('Error applying coupon:', error);
            couponMessage.className = 'mt-2 error';
            couponMessage.textContent = 'Failed to apply coupon. Please try again.';
            currentCouponDiscount = 0;
            couponDiscountSpan.textContent = '0';
            couponDiscountRow.style.display = 'none';
            updateFinalAmount();
        } finally {
            // Reset button state
            applyCouponBtn.disabled = false;
            applyCouponBtn.textContent = originalText;
        }
    });
});
</script>
</html>