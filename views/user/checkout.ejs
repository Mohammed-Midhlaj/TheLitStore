<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TheLitStore - Checkout</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Modern CSS Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            color: #2d3748;
            line-height: 1.6;
            min-height: 100vh;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header Section */
        .back-link {
            margin-bottom: 30px;
        }

        .back-link a {
            color: #4a5568;
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 8px;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .back-link a:hover {
            background: rgba(255, 255, 255, 0.95);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .logo {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo img {
            max-width: 120px;
            height: auto;
            filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
        }

        .checkout-title {
            text-align: center;
            margin-bottom: 40px;
            font-size: 32px;
            font-weight: 700;
            color: #1a202c;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Main Layout */
        .checkout-container {
            display: grid;
            grid-template-columns: 1fr 400px;
            gap: 40px;
            align-items: start;
        }

        .checkout-details {
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        .order-summary {
            position: sticky;
            top: 20px;
        }

        /* Card Components */
        .info-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            padding: 28px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .info-section:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.12);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 16px;
            border-bottom: 2px solid #e2e8f0;
        }

        .section-header h2 {
            font-size: 20px;
            font-weight: 600;
            color: #1a202c;
        }

        .edit-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            cursor: pointer;
            font-size: 12px;
            font-weight: 600;
            padding: 8px 16px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .edit-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

        .section-content {
            font-size: 15px;
            color: #4a5568;
        }

        /* Address Selection */
        .address-label {
            display: block;
            margin-bottom: 16px;
            border: 2px solid #e2e8f0;
            padding: 20px;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }

        .address-label:hover {
            border-color: #667eea;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.1);
        }

        .address-label input[type="radio"] {
            margin-right: 12px;
            transform: scale(1.2);
        }

        .address-label input[type="radio"]:checked + .address-details {
            color: #667eea;
        }

        .address-details p {
            margin-bottom: 4px;
        }

        .address-details p:first-child {
            font-weight: 600;
            color: #1a202c;
            margin-bottom: 8px;
        }

        /* Order Items */
        .order-item {
            display: flex;
            gap: 20px;
            margin-bottom: 24px;
            padding: 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .item-image img {
            width: 80px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .item-details {
            display: flex;
            flex-direction: column;
            justify-content: center;
            flex: 1;
        }

        .item-name {
            font-weight: 600;
            color: #1a202c;
            margin-bottom: 4px;
        }

        .checkout-item-price {
            font-weight: 600;
            color: #667eea;
            font-size: 16px;
        }

        /* Delivery Option */
        .delivery-option {
            background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
            padding: 24px;
            border-radius: 12px;
            border: 1px solid #e2e8f0;
        }

        .delivery-option-header h3 {
            font-size: 18px;
            font-weight: 600;
            color: #1a202c;
            margin-bottom: 16px;
        }

        .delivery-address p {
            margin-bottom: 4px;
            color: #4a5568;
        }

        .delivery-address p:last-child {
            font-weight: 600;
            color: #667eea;
            margin-top: 12px;
        }

        /* Payment Section */
        .payment-question {
            margin-bottom: 20px;
            font-weight: 600;
            font-size: 18px;
            color: #1a202c;
        }

        .payment-options {
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        .payment-option {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 16px 20px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }

        .payment-option:hover {
            border-color: #667eea;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.1);
        }

        .payment-option.selected {
            border-color: #667eea;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .payment-option input[type="radio"] {
            transform: scale(1.2);
        }

        .payment-option label {
            flex: 1;
            font-weight: 500;
            cursor: pointer;
        }

        .payment-note {
            font-size: 13px;
            color: #718096;
            margin-top: 8px;
            font-style: italic;
        }

        /* Order Summary */
        .summary-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            padding: 28px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .discount-section h3 {
            font-size: 18px;
            font-weight: 600;
            color: #1a202c;
            margin-bottom: 16px;
        }

        .coupon-select {
            display: flex;
            gap: 12px;
            margin-bottom: 16px;
        }

        .coupon-select select {
            flex: 1;
            padding: 12px 16px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            background: white;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .coupon-select select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .apply-discount-btn {
            padding: 12px 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .apply-discount-btn:hover:not(:disabled) {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

        .apply-discount-btn:disabled {
            background: #cbd5e0;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        #couponMessage {
            font-size: 14px;
            margin-top: 8px;
            padding: 8px 12px;
            border-radius: 6px;
        }

        #couponMessage.success {
            color: #22543d;
            background: #c6f6d5;
            border: 1px solid #9ae6b4;
        }

        #couponMessage.error {
            color: #742a2a;
            background: #fed7d7;
            border: 1px solid #feb2b2;
        }

        /* Price Breakdown */
        .price-breakdown {
            margin: 24px 0;
        }

        .price-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            font-size: 15px;
            color: #4a5568;
        }

        .price-row.total {
            font-weight: 700;
            font-size: 18px;
            color: #1a202c;
            border-top: 2px solid #e2e8f0;
            padding-top: 16px;
            margin-top: 16px;
        }

        /* Buttons */
        .complete-purchase-btn {
            width: 100%;
            padding: 18px 24px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .complete-purchase-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
        }

        .complete-purchase-btn:disabled {
            background: #cbd5e0;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Data Security */
        .data-security {
            text-align: center;
            font-size: 13px;
            color: #718096;
            margin-top: 24px;
            padding: 16px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 8px;
            backdrop-filter: blur(10px);
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .checkout-container {
                grid-template-columns: 1fr;
                gap: 24px;
            }

            .order-summary {
                position: static;
                order: -1;
            }
        }

        @media (max-width: 768px) {
            .container {
                padding: 16px;
            }

            .checkout-title {
                font-size: 24px;
                margin-bottom: 24px;
            }

            .info-section {
                padding: 20px;
            }

            .section-header h2 {
                font-size: 18px;
            }

            .order-item {
                padding: 16px;
            }

            .item-image img {
                width: 60px;
                height: 80px;
            }

            .complete-purchase-btn {
                padding: 16px 20px;
                font-size: 15px;
            }

            .back-link {
                margin-bottom: 20px;
            }

            .logo img {
                max-width: 100px;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 12px;
            }

            .checkout-title {
                font-size: 20px;
                margin-bottom: 20px;
            }

            .info-section {
                padding: 16px;
            }

            .section-content {
                font-size: 14px;
            }

            .payment-option {
                padding: 12px 16px;
            }

            .price-row {
                font-size: 14px;
            }

            .price-row.total {
                font-size: 16px;
            }

            .coupon-select {
                flex-direction: column;
            }

            .apply-discount-btn {
                width: 100%;
            }
        }

        /* Focus States for Accessibility */
        .payment-option:focus-within {
            outline: 2px solid #667eea;
            outline-offset: 2px;
        }

        .address-label:focus-within {
            outline: 2px solid #667eea;
            outline-offset: 2px;
        }

        .complete-purchase-btn:focus {
            outline: 2px solid #667eea;
            outline-offset: 2px;
        }

        /* Loading States */
        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        /* Animation for success/error messages */
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        #couponMessage {
            animation: slideIn 0.3s ease;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="back-link">
            <a href="/cart"><i class="fas fa-arrow-left"></i> Back to shopping bag</a>
        </div>

        <!-- Logo -->
        <div class="logo">
            <a href="/">
                <img src="images/AestheLogo-red.png" alt="Aesthé Logo">
            </a>
        </div>

        <!-- Checkout Title -->
        <h1 class="checkout-title">Checkout</h1>

        <!-- Main content wrapped in one form -->
        <form action="/placeOrder" method="POST" id="checkoutForm">
            <div class="checkout-container">
                <div class="checkout-details">
                    <div class="info-section">
                        <div class="section-header">
                            <h2><strong>My information</strong></h2>
                            <a href="/userProfile">
                                <button type="button" class="edit-btn">EDIT</button>
                            </a>
                        </div>
                        <div class="section-content">
                            <p class="customer-name">
                                <%= user.name %>
                            </p>
                            <p class="customer-email">
                                <%= user.email %>
                            </p>
                        </div>
                    </div>

                    <!-- Billing Address Section -->
                    <div class="info-section">
                        <div class="section-header">
                            <h2><strong>Billing Address</strong></h2>
                            <a href="/address">
                                <button type="button" class="edit-btn">EDIT</button>
                            </a>
                        </div>
                        <div class="section-content">
                            <% if (addresses && addresses.length> 0 && addresses[0].address &&
                                addresses[0].address.length > 0) { %>
                                <% addresses[0].address.forEach(function(userAddress, index) { %>
                                    <label class="address-label"
                                        style="display:block; margin-bottom:10px; border:1px solid #ccc; padding:10px; border-radius:4px;">
                                        <input type="radio" name="billingAddress" value="<%= userAddress._id %>"
                                            <%=index===0 ? "checked" : "" %>>
                                        <div class="address-details">
                                            <p><strong>
                                                    <%= userAddress.label || "Address" %>
                                                </strong></p>
                                            <p>
                                                <%= userAddress.name %>
                                            </p>
                                            <p>
                                                <%= userAddress.phone %>
                                            </p>
                                            <p>
                                                <%= userAddress.landMark %>
                                            </p>
                                            <p>
                                                <%= userAddress.city %>
                                                    <%= userAddress.pincode %>
                                            </p>
                                            <p>
                                                <%= userAddress.state %>
                                            </p>
                                        </div>
                                    </label>
                                    <% }); %>
                                        <% } else { %>
                                            <div>
                                                <a href="/address">
                                                    <h3>Add Address</h3>
                                                </a>
                                            </div>
                                            <% } %>
                        </div>
                    </div>

                    <!-- Order Details Section -->
                    <div class="info-section order-details-section">
                        <div class="section-header">
                            <h2><strong>View Order Details</strong></h2>
                            <span class="item-count">
                                <%= cartItems.length %> item<%= cartItems.length> 1 ? 's' : '' %>
                            </span>
                        </div>
                        <div class="section-content">
                            <% cartItems.forEach(item=> { %>
                                <div class="order-item">
                                    <div class="item-image">
                                        <a href="/productDetails?productId=<%= item.productId._id %>">
                                            <img src="/uploads/re-image/<%= item.productId.productImage[0] %>"
                                                alt="<%= item.productId.name %>" width="100" height="120">
                                        </a>
                                    </div>
                                    <div class="item-details">
                                        <p class="item-name">Parcel</p>
                                        <p class="item-count">
                                            <%= item.quantity %> item<%= item.quantity> 1 ? 's' : '' %>
                                        </p>
                                        <p class="checkout-item-price">₹<%= item.price || item.salePrice %></p>
                                    </div>
                                </div>
                                <% }) %>
                                    <div class="delivery-option">
                                        <div class="delivery-option-header">
                                            <h3><strong>Standard Delivery</strong></h3>
                                        </div>
                                        <% if (addresses && addresses.length> 0 && addresses[0].address &&
                                            addresses[0].address.length > 0) {
                                            let defaultAddress = addresses[0].address[0];
                                            %>
                                            <div class="delivery-address" id="deliveryAddressPreview">
                                                <p>
                                                    <%= defaultAddress.name %>
                                                </p>
                                                <p>91+ <%= defaultAddress.phone %>
                                                </p>
                                                <p>
                                                    <%= defaultAddress.landMark %>
                                                </p>
                                                <p>
                                                    <%= defaultAddress.city %>
                                                        <%= defaultAddress.pincode %>
                                            </p>
                                                <p>
                                                    <%= defaultAddress.state %>
                                                </p>
                                                <p><strong>₹149.00 · 2-7 days</strong></p>
                                            </div>
                                            <% } else { %>
                                                <div class="delivery-address">
                                                    <a href="/address">
                                                        <h3>Add Address</h3>
                                                    </a>
                                                </div>
                                                <% } %>
                                    </div>
                        </div>
                    </div>

                    <!-- Payment Section -->
                    <div class="info-section payment-section">
                        <div class="section-header">
                            <h2>Payment</h2>
                        </div>
                        <div class="section-content">
                            <p class="payment-question">How Would you like to pay?</p>
                            <div class="payment-options">
                                <div class="payment-option <%= finalAmount > 1000 ? 'selected' : '' %>">
                                    <input type="radio" id="netbanking" name="payment" value="razorpay" <%= finalAmount > 1000 ? 'checked' : '' %>>
                                    <label for="netbanking">Razorpay</label>
                                </div>
                                <div class="payment-option <%= finalAmount > 1000 ? '' : 'selected' %>">
                                    <input type="radio" id="cod" name="payment" value="cod" <%= finalAmount > 1000 ? 'disabled' : 'checked' %>>
                                    <label for="cod" style="<%= finalAmount > 1000 ? 'color:#aaa;' : '' %>">Cash on delivery</label>
                                    <% if (finalAmount > 1000) { %>
                                        <span style="color:#d73333; font-size:13px; margin-left:10px;">COD not available for orders above ₹1000</span>
                                    <% } %>
                                </div>
                                <!-- Wallet Payment Option -->
                                <div class="payment-option">
                                    <input type="radio" id="wallet" name="payment" value="wallet" <%= user.walletBalance >= finalAmount ? '' : 'disabled' %>>
                                    <label for="wallet">
                                        Wallet (Balance: ₹<%= user.walletBalance.toFixed(2) %>)
                                    </label>
                                    <% if (user.walletBalance < finalAmount) { %>
                                        <span style="color:#d73333; font-size:13px; margin-left:10px;">Insufficient wallet balance</span>
                                    <% } %>
                                </div>
                                <p class="payment-note">You pay only cash at time of receiving the order</p>
                                <p class="payment-note">Wallet payments are instant and secure.</p>
                            </div>
                        </div>
                    </div>

                    <div class="data-security">
                        <p>All Data are encrypted</p>
                    </div>
                </div>

                <!-- Right column - Order summary -->
                <div class="order-summary">
                    <div class="summary-section">
                        <div class="discount-section">
                            <h3>Available Coupons</h3>
                            <div class="coupon-select">
                                <select id="couponSelect" class="form-control">
                                    <option value="">Select a coupon</option>
                                    <% if (validCoupons && validCoupons.length > 0) { %>
                                        <% validCoupons.forEach(coupon => { 
                                            const isExpired = new Date(coupon.expireOn) < new Date();
                                        %>
                                            <% if (!isExpired) { %>
                                                <option value="<%= coupon.name %>" 
                                                        data-offer="<%= coupon.offerPrice %>"
                                                        data-min="<%= coupon.minimumPrice %>">
                                                    <%= coupon.name %> - Get ₹<%= coupon.offerPrice %> off
                                                    (Min. ₹<%= coupon.minimumPrice %>)
                                                </option>
                                            <% } %>
                                        <% }); %>
                                    <% } else { %>
                                        <option value="" disabled>No coupons available</option>
                                    <% } %>
                                </select>
                                <button type="button" id="applyCouponBtn" class="apply-discount-btn" disabled>
                                    Apply
                                </button>
                            </div>
                            <div id="couponMessage" class="mt-2"></div>
                        </div>
                        <div class="price-breakdown">
                            <div class="price-row">
                                <span>Subtotal</span>
                                <span>₹<span id="subtotal"><%= totalPrice %></span></span>
                            </div>
                            <div class="price-row" id="couponDiscountRow" style="display: none;">
                                <span>Coupon Discount</span>
                                <span>-₹<span id="couponDiscount">0</span></span>
                            </div>
                            <div class="price-row">
                                <span>Shipping</span>
                                <span>₹<span id="shipping"><%= deliveryCharge %></span></span>
                            </div>
                            <div class="price-row total">
                                <span>Total</span>
                                <span>₹<span id="totalAmount"><%= finalAmount %></span></span>
                            </div>
                        </div>

                        <!-- Complete Purchase Button inside the form -->
                        <button type="submit" class="complete-purchase-btn">Complete Purchase</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</body>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
// alert('Script loaded!');
console.log('Script loaded!');
document.addEventListener('DOMContentLoaded', function() {
    const addressList = <%- JSON.stringify(addresses && addresses.length > 0 ? addresses[0].address : []) %>;
    const razorpayKey = "<%= process.env.RAZORPAY_KEY_ID %>";
    const finalAmountPaise = Number("<%= finalAmount || 0 %>") * 100;

    // Function to handle Razorpay payment flow
    async function payWithRazorpay() {
        try {
            // Create order on the backend with the final amount
            const response = await fetch('/createOrder', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ amount: finalAmountPaise })
            });
            const order = await response.json();

            var options = {
                key: razorpayKey,
                amount: order.amount,
                currency: order.currency,
                name: "Your Company Name",
                description: "Test Transaction",
                order_id: order.id,
                handler: function (response) {
                    verifyPayment({
                        ...response,
                        orderDetails: placeOrderResult.orderDetails
                    });
                },
                prefill: {
                    name: <%- JSON.stringify(user.name || '') %>,
                    email: <%- JSON.stringify(user.email || '') %>,
                    contact: <%- JSON.stringify(user.phone || '') %>
                },
                theme: { color: "#3399cc" }
            };

            var rzp1 = new Razorpay(options);

            // Payment failure listener using SweetAlert2
            rzp1.on('payment.failed', function (response) {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed!',
                    text: 'Oops, something went wrong. Please try again.'
                }).then(() => {
                    window.location.href = '/order-failed';
                });
            });

            rzp1.open();
        } catch (error) {
            console.error("Error creating order:", error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: 'Could not create order. Please try again.'
            });
        }
    }

    // Function to verify payment and store order with updated payment status
    async function verifyPayment(paymentResponse) {
        try {
            console.log('Sending payment verification request:', paymentResponse);
            // Verify payment on the backend
            const response = await fetch('/verifyPayment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(paymentResponse)
            });
            const result = await response.json();
            console.log('Payment verification result:', result);

            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Order Placed!',
                    text: 'Your order has been placed successfully.'
                }).then(() => {
                    window.location.href = result.redirect;
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Verification Failed!',
                    text: result.message || 'An error occurred during payment verification.'
                });
            }
        } catch (error) {
            console.error("Error verifying payment:", error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: 'Could not verify payment. Please try again.'
            });
        }
    }

    // Handle form submission
    document.getElementById('checkoutForm').addEventListener('submit', async function(event) {
        console.log('Checkout form submit handler triggered!');
        const formData = new FormData(this);
        const data = Object.fromEntries(formData.entries());
        if (data.payment === 'razorpay') {
            event.preventDefault();
            // Show loading state
            const submitButton = this.querySelector('.complete-purchase-btn');
            const originalText = submitButton.textContent;
            submitButton.disabled = true;
            submitButton.textContent = 'Processing...';
            try {
                // Pass the entire form data to the backend to create the order
                const placeOrderResponse = await fetch('/placeOrder', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                    credentials: 'include'
                });
                const placeOrderResult = await placeOrderResponse.json();
                if (placeOrderResult.status && placeOrderResult.razorpayOrderId) {
                    var options = {
                        key: razorpayKey,
                        amount: placeOrderResult.amount * 100, // Amount in paise
                        currency: 'INR',
                        name: "TheLitStore",
                        description: "Order Payment",
                        order_id: placeOrderResult.razorpayOrderId,
                        handler: function (response) {
                            console.log('Razorpay payment response:', response);
                            console.log('Order details from placeOrder:', placeOrderResult.orderDetails);
                            verifyPayment({
                                ...response,
                                orderDetails: placeOrderResult.orderDetails
                            });
                        },
                        prefill: {
                            name: <%- JSON.stringify(user.name || '') %>,
                            email: <%- JSON.stringify(user.email || '') %>,
                            contact: <%- JSON.stringify(user.phone || '') %>
                        },
                        theme: { color: "#d73333" }
                    };
                    var rzp1 = new Razorpay(options);
                    rzp1.on('payment.failed', function (response) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed!',
                            text: 'Oops, something went wrong. Please try again.'
                        }).then(() => {
                            window.location.href = '/order-failed';
                        });
                    });
                    rzp1.open();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error Placing Order!',
                        text: placeOrderResult.message || 'An unknown error occurred.'
                    });
                }
            } catch (error) {
                console.error('Error placing order:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An unexpected error occurred. Please try again.'
                });
            } finally {
                submitButton.disabled = false;
                submitButton.textContent = originalText;
            }
        }
        // For COD, do not prevent default; let the form submit normally
    });

    // Coupon handling code
    const couponSelect = document.getElementById('couponSelect');
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const couponMessage = document.getElementById('couponMessage');
    const subtotalSpan = document.getElementById('subtotal');
    const couponDiscountSpan = document.getElementById('couponDiscount');
    const couponDiscountRow = document.getElementById('couponDiscountRow');
    const shippingSpan = document.getElementById('shipping');
    const totalAmountSpan = document.getElementById('totalAmount');

    let currentCouponDiscount = 0;
    let currentSubtotal = Number(subtotalSpan.textContent);
    let currentShipping = Number(shippingSpan.textContent);

    function updateFinalAmount() {
        let total = currentSubtotal + currentShipping - currentCouponDiscount;
        totalAmountSpan.textContent = total.toFixed(2);
    }

    couponSelect.addEventListener('change', function() {
        if (this.value) {
            applyCouponBtn.disabled = false;
        } else {
            applyCouponBtn.disabled = true;
            currentCouponDiscount = 0;
            couponDiscountSpan.textContent = '0';
            couponDiscountRow.style.display = 'none';
            updateFinalAmount();
        }
    });

    applyCouponBtn.addEventListener('click', async function() {
        const couponCode = couponSelect.value;
        if (!couponCode) return;

        // Disable button and show loading state
        applyCouponBtn.disabled = true;
        const originalText = applyCouponBtn.textContent;
        applyCouponBtn.textContent = 'Applying...';

        try {
            const response = await fetch('/checkout/apply-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ couponCode: couponCode })
            });
            const result = await response.json();

            couponMessage.className = 'mt-2';
            if (result.status) {
                couponMessage.classList.add('success');
                couponMessage.textContent = result.message;
                currentCouponDiscount = result.coupon.offerPrice;
                couponDiscountSpan.textContent = result.coupon.offerPrice.toFixed(2);
                couponDiscountRow.style.display = '';
                updateFinalAmount();
            } else {
                couponMessage.classList.add('error');
                couponMessage.textContent = result.message;
                currentCouponDiscount = 0;
                couponDiscountSpan.textContent = '0';
                couponDiscountRow.style.display = 'none';
                updateFinalAmount();
            }
        } catch (error) {
            console.error('Error applying coupon:', error);
            couponMessage.className = 'mt-2 error';
            couponMessage.textContent = 'Failed to apply coupon. Please try again.';
            currentCouponDiscount = 0;
            couponDiscountSpan.textContent = '0';
            couponDiscountRow.style.display = 'none';
            updateFinalAmount();
        } finally {
            // Reset button state
            applyCouponBtn.disabled = false;
            applyCouponBtn.textContent = originalText;
        }
    });
});
</script>
</html>