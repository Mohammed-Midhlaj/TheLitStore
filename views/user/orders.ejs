<%-include("../../views/partials/user/header", { 
    isAuthenticated: typeof isAuthenticated !== 'undefined' ? isAuthenticated : false,
    user: typeof user !== 'undefined' ? user : { name: 'Guest' }
})%>
<style>
        /* Account Page Styles (Keep your existing styles) */
        .account-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .account-title {
            font-size: 28px;
            font-weight: bold;
            margin-bottom: 30px;
            padding-left: 15px;
        }

        .account-layout {
            display: flex;
            gap: 30px;
        }

        .account-menu-container {
            flex: 0 0 450px;
        }

        .account-menu {
            width: 100%;
            background-color: #f9f9f9;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 15px 20px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .menu-item:last-child {
            border-bottom: none;
        }

        .menu-item:hover {
            background-color: #f0f0f0;
        }

        .menu-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            color: #666;
        }

        .menu-text {
            flex: 1;
            font-size: 16px;
        }

        .menu-arrow {
            color: #aaa;
            font-weight: lighter;
        }

        .menu-item.active {
            background-color: #f0f0f0;
        }

        /* My Details Section */
        .account-details-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 20px;
            /* Space between order cards */
        }

        .account-details {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .details-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .details-title {
            font-size: 20px;
            font-weight: bold;
        }

        .edit-button {
            color: #0066cc;
            text-decoration: none;
            font-size: 14px;
        }

        .detail-row {
            margin-bottom: 15px;
        }

        .detail-label {
            font-size: 14px;
            color: #666;
            margin-bottom: 3px;
        }

        .detail-value {
            font-size: 16px;
            color: #333;
        }

        .change-btn {
            background-color: black;
            color: white;
            padding: 10px;
            margin-right: 8px;
            margin-top: 10px;
        }

        .change-btn:hover {
            background-color: white;
            color: black;
        }

        /* Order Details Styles */
        .order-details-container {
            width: 100%;
            margin-bottom: 20px;
            /* Additional spacing between orders */
            border: 1px solid #c7c7c7;
            margin-top: 20px;
        }

        .order-card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            overflow: hidden;
        }

        .order-card-header {
            padding: 15px 20px;
            border-bottom: 1px solid #eee;
            background-color: #f9f9f9;
        }

        .order-card-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .order-card-body {
            padding: 20px;
        }

        .order-section {
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .order-section:last-child {
            margin-bottom: 0;
            padding-bottom: 0;
            border-bottom: none;
        }

        .section-title {
            font-size: 16px;
            font-weight: 600;
            color: #333;
            margin-bottom: 15px;
            padding-bottom: 8px;
            border-bottom: 1px dashed #eee;
        }

        .order-info-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
        }

        .order-info-item {
            margin-bottom: 15px;
        }

        .order-info-label {
            font-size: 14px;
            color: #666;
            margin-bottom: 5px;
        }

        .order-info-value {
            font-size: 15px;
            color: #333;
            font-weight: 500;
        }

        .order-status,
        .payment-status {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 14px;
            background-color: #fff3cd;
            color: #856404;
        }

        .order-total-row {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .delivery-info-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 15px;
        }

        .ordered-items-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        .ordered-items-table th {
            text-align: left;
            padding: 12px 15px;
            background-color: #f9f9f9;
            border-bottom: 1px solid #eee;
            font-weight: 600;
            color: #333;
        }

        .ordered-items-table td {
            padding: 15px;
            border-bottom: 1px solid #eee;
            vertical-align: middle;
        }

        .product-image {
            width: 60px;
            height: 60px;
            object-fit: contain;
        }

        .product-name {
            color: #0066cc;
            text-decoration: none;
        }

        .product-name:hover {
            text-decoration: underline;
        }

        .table-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .cancel-order-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            font-size: 14px;
        }

        .cancel-order-btn svg {
            margin-right: 5px;
        }

        .go-to-profile-btn {
            background-color: #fff;
            color: #333;
            border: 1px solid #ddd;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .go-to-profile-btn:hover {
            background-color: #f9f9f9;
        }

        /* Responsive design */
        @media (max-width: 992px) {
            .account-layout {
                flex-direction: column;
            }

            .account-menu-container {
                flex: 0 0 auto;
                width: 100%;
            }

            .account-details-container {
                width: 100%;
            }

            .order-info-grid,
            .delivery-info-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .account-container {
                padding: 15px 10px;
            }

            .account-title {
                font-size: 24px;
                margin-bottom: 20px;
            }

            .account-menu {
                max-width: 100%;
            }

            .order-info-grid,
            .delivery-info-grid {
                grid-template-columns: 1fr;
            }

            .ordered-items-table thead {
                display: none;
            }

            .ordered-items-table,
            .ordered-items-table tbody,
            .ordered-items-table tr,
            .ordered-items-table td {
                display: block;
                width: 100%;
            }

            .ordered-items-table tr {
                margin-bottom: 15px;
                border-bottom: 1px solid #eee;
            }

            .ordered-items-table td {
                text-align: right;
                padding: 10px;
                position: relative;
                border-bottom: none;
            }

            .ordered-items-table td::before {
                content: attr(data-label);
                position: absolute;
                left: 10px;
                width: 50%;
                padding-right: 15px;
                font-weight: 600;
                text-align: left;
            }

            .table-footer {
                flex-direction: column;
                gap: 15px;
            }

            .cancel-order-btn,
            .go-to-profile-btn {
                width: 100%;
                justify-content: center;
            }
        }

        @media (max-width: 480px) {
            .order-card-body {
                padding: 15px 10px;
            }
        }
    </style>

    <div class="account-container">
        <div style="margin-bottom:20px;">
            <a href="/orders" class="view-order-btn" style="background:#ffa602;color:#fff;">‚Üê Back to Orders</a>
        </div>
        <!-- Order Details Container (Right Side) -->
        <div class="account-details-container">
            <div class="order-details-container">
                <!-- Combined Order Details Card -->
                <div class="order-card">
                    <div class="order-card-header">
                        <div class="order-card-title">Order Details</div>
                    </div>
                    <div class="order-card-body">
                        <!-- Order Information Section -->
                        <div class="order-section">
                            <div class="section-title">Order Information</div>
                            <div class="order-info-grid">
                                <div class="order-info-item">
                                    <div class="order-info-label">Order ID</div>
                                    <div class="order-info-value" id="order-id">
                                        <%= order.orderId %>
                                    </div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Order Date</div>
                                    <div class="order-info-value" id="order-date">
                                        <%= new Date(order.createdOn).toLocaleString('en-IN', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %>
                                    </div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Order Status</div>
                                    <div class="order-info-value">
                                        <span class="order-status" id="order-status">
                                            <%= order.status %>
                                        </span>
                                    </div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Payment Method</div>
                                    <div class="order-info-value" id="payment-method">
                                        <%= order.paymentMethod %>
                                    </div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Payment Status</div>
                                    <div class="order-info-value">
                                        <span class="payment-status" id="payment-status">
                                            <%= order.paymentStatus %>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="order-total-row">
                                <div class="order-info-item">
                                    <div class="order-info-label">Subtotal</div>
                                    <div class="order-info-value" id="subtotal">‚Çπ<%= order.totalPrice.toFixed(2) %></div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Shipping</div>
                                    <div class="order-info-value" id="shipping">‚Çπ<%= order.shippingCharge ? order.shippingCharge.toFixed(2) : '149.00' %></div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Discount</div>
                                    <div class="order-info-value" id="discount">‚Çπ<%= order.discount ? order.discount.toFixed(2) : '0.00' %></div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label" style="font-weight:bold;">Total Amount</div>
                                    <div class="order-info-value" id="total-amount" style="font-weight:bold;">‚Çπ<%= order.finalAmount.toFixed(2) %></div>
                                </div>
                            </div>
                        </div>

                        <!-- Delivery Address Section -->
                        <div class="order-section">
                            <div class="section-title">Delivery Address</div>
                            <div class="delivery-info-grid">
                                <div class="order-info-item">
                                    <div class="order-info-label">Delivery place</div>
                                    <div class="order-info-value" id="delivery-place">
                                        <%= order.billingAddress.place %>
                                    </div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Phone Number</div>
                                    <div class="order-info-value" id="phone-number">
                                        <%= order.billingAddress.phone %>
                                    </div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Address Type</div>
                                    <div class="order-info-value" id="address-type">
                                        <%= order.billingAddress.type %>
                                    </div>
                                </div>
                                <div class="order-info-item">
                                    <div class="order-info-label">Address</div>
                                    <div class="order-info-value" id="address">
                                        <%= order.billingAddress.name %>, <%= order.billingAddress.landMark %>, <%=
                                                    order.billingAddress.city %>, <%= order.billingAddress.state %>,
                                                        <%= order.billingAddress.pincode %>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Ordered Items Section -->
                        <div class="order-section">
                            <div class="section-title">Ordered Items</div>
                            <button onclick="window.location.href='/download-invoice/<%= order._id %>'" class="view-order-btn" style="float:right;margin-bottom:10px;">Download Invoice</button>
                            <table class="ordered-items-table">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Name</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody id="ordered-items">
                                    <% 
                                    let totalAmount = 0;
                                    order.orderedItem.forEach(item => {
                                        const itemTotal = item.price * item.quantity;
                                        totalAmount += itemTotal;
                                    });
                                    %>
                                    <% order.orderedItem.forEach(item=>{%>
                                        <tr>
                                            <td data-label="Product">
                                                <img src="/uploads/re-image/<%= item.product.productImage[0]%>"
                                                    alt="<%= item.product.productName %> " class="product-image">
                                            </td>
                                            <td data-label="Name">
                                                <a href="#" class="product-name">
                                                    <%= item.product.productName %>
                                                </a>
                                                <div style="margin-top:6px;">
                                                    <% if (item.cancellationRequested && item.cancellationStatus === 'Requested') { %>
                                                        <span class="status-badge pending">Cancellation Requested</span>
                                                    <% } else if (item.cancellationStatus === 'Denied') { %>
                                                        <span class="status-badge cancelled">Cancellation Denied</span>
                                                    <% } else if (item.cancellationStatus === 'Approved') { %>
                                                        <span class="status-badge delivered">Cancelled</span>
                                                    <% } else if ((order.status === 'Pending' || order.status === 'Processing') && !item.cancellationRequested && order.status !== 'Cancelled') { %>
                                                        <button class="cancel-order-btn cancel-item-btn" data-item-id="<%= item._id %>" title="Cancel this item">Cancel</button>
                                                    <% } %>
                                                    <% if (item.returnRequested && item.returnStatus === 'Requested') { %>
                                                        <span class="status-badge pending">Return Requested</span>
                                                    <% } else if (item.returnStatus === 'Denied') { %>
                                                        <span class="status-badge cancelled">Return Denied</span>
                                                    <% } else if (item.returnStatus === 'Approved') { %>
                                                        <span class="status-badge delivered">Returned</span>
                                                    <% } else if (order.status === 'Delivered' && !item.returnRequested && order.status !== 'Cancelled') { %>
                                                        <button class="return-btn return-item-btn" data-item-id="<%= item._id %>" title="Return this item" style="background:#10b981;color:#fff;padding:7px 16px;border-radius:4px;border:none;display:inline-flex;align-items:center;gap:6px;">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="margin-right:3px;"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10v6a2 2 0 002 2h6m-8-8l8-8m0 0l8 8m-8-8v18"/></svg>
                                                            Return
                                                        </button>
                                                    <% } %>
                                                </div>
                                            </td>
                                            <td data-label="Price">‚Çπ<%= item.price %>
                                            </td>
                                            <td data-label="Quantity">
                                                <%= item.quantity %>
                                            </td>
                                            <td data-label="Total">‚Çπ<%= (item.price * item.quantity).toFixed(2) %>
                                            </td>
                                        </tr>
                                        <% }); %>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="4" style="text-align: right; font-weight: 600;">Subtotal:</td>
                                        <td style="font-weight: 600;">‚Çπ<%= totalAmount.toFixed(2) %></td>
                                    </tr>
                                    <tr>
                                        <td colspan="4" style="text-align: right; font-weight: 600;">Shipping:</td>
                                        <td style="font-weight: 600;">‚Çπ<%= order.shippingCharge ? order.shippingCharge.toFixed(2) : '149.00' %></td>
                                    </tr>
                                    <tr>
                                        <td colspan="4" style="text-align: right; font-weight: 600;">Discount:</td>
                                        <td style="font-weight: 600;">‚Çπ<%= order.discount ? order.discount.toFixed(2) : '0.00' %></td>
                                    </tr>
                                    <tr>
                                        <td colspan="4" style="text-align: right; font-weight: bold;">Total Paid:</td>
                                        <td style="font-weight: bold;">‚Çπ<%= order.finalAmount.toFixed(2) %></td>
                                    </tr>
                                </tfoot>
                            </table>
                            <div class="table-footer">
                                <% if (order.status === 'Cancelled') { %>
                                    <button class="cancel-order-btn" disabled>Order Cancelled</button>
                                <% } else if (order.cancellationRequested && order.cancellationStatus === 'Requested') { %>
                                    <button class="cancel-order-btn" disabled>Cancellation Requested</button>
                                <% } else if (order.cancellationStatus === 'Denied') { %>
                                    <button class="cancel-order-btn" disabled>Cancellation Denied</button>
                                <% } else if ((order.status === 'Pending' || order.status === 'Processing') && !order.cancellationRequested) { %>
                                    <button class="cancel-order-btn" id="cancelOrderBtn">Cancel Order</button>
                                <% } %>

                                <% if (order.status === 'Delivered' && !order.returnRequested) { %>
                                    <button class="return-btn" id="returnOrderBtn">Return Order</button>
                                    <form id="returnReasonForm" style="display:none; margin-top:10px;">
                                        <label for="returnReason">Return Reason:</label>
                                        <textarea id="returnReason" name="returnReason" required style="width:100%;"></textarea>
                                        <button type="submit" class="view-order-btn" style="margin-top:5px;">Submit Return</button>
                                    </form>
                                <% } else if (order.returnRequested && order.returnStatus === 'Requested') { %>
                                    <button class="return-btn" disabled>Return Requested</button>
                                <% } else if (order.returnStatus === 'Denied') { %>
                                    <button class="return-btn" disabled>Return Denied</button>
                                <% } else if (order.returnStatus === 'Approved' || order.status === 'Returned') { %>
                                    <button class="return-btn" disabled>Returned</button>
                                <% } %>

                                <% if ((order.paymentStatus === 'Completed') && (order.returnStatus === 'Approved' || order.status === 'Cancelled') && !order.refundRequested && order.refundStatus !== 'Approved' && order.refundStatus !== 'Processed' && order.refundStatus !== 'Denied' && order.status !== 'Cancelled') { %>
                                    <button class="view-order-btn" id="refundOrderBtn">Request Refund</button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
   



    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.menu-item[data-route]').forEach(item => {
                item.addEventListener('click', function () {
                    window.location.href = this.getAttribute('data-route');
                });
            });

            document.getElementById('sign-out').addEventListener('click', function () {
                fetch('/api/logout', {
                    method: 'POST',
                    credentials: 'same-origin'
                }).then(() => {
                    window.location.href = '/';
                });
            });

            function loadUserData() {

            }

            loadUserData();

            // Per-item cancel
            document.querySelectorAll('.cancel-item-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const itemId = this.getAttribute('data-item-id');
                    console.log('Cancel item button clicked. itemId:', itemId);
                    Swal.fire({
                        title: 'Cancel Item?',
                        text: 'Are you sure you want to cancel this item?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, cancel it!',
                        cancelButtonText: 'No, keep it'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            const payload = { orderId: '<%= order._id %>', itemId };
                            console.log('Sending cancel item request:', payload);
                            fetch('/order/item/request-cancel', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify(payload)
                            })
                            .then(res => res.json())
                            .then(data => {
                                if (data.status) {
                                    Swal.fire('Cancelled!', data.message, 'success').then(() => location.reload());
                                } else {
                                    Swal.fire('Error', data.message, 'error');
                                }
                            });
                        }
                    });
                });
            });

            // Per-item return
            document.querySelectorAll('.return-item-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const itemId = this.getAttribute('data-item-id');
                    console.log('Return item button clicked. itemId:', itemId);
                    Swal.fire({
                        title: 'Return Item',
                        input: 'textarea',
                        inputLabel: 'Return Reason',
                        inputPlaceholder: 'Enter your reason...',
                        showCancelButton: true,
                        confirmButtonText: 'Submit',
                        cancelButtonText: 'Cancel',
                        inputValidator: (value) => {
                            if (!value) return 'Please provide a reason!';
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            const payload = { orderId: '<%= order._id %>', itemId, returnReason: result.value };
                            console.log('Sending return item request:', payload);
                            fetch('/order/item/request-return', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify(payload)
                            })
                            .then(res => res.json())
                            .then(data => {
                                if (data.status) {
                                    Swal.fire('Return Requested!', data.message, 'success').then(() => location.reload());
                                } else {
                                    Swal.fire('Error', data.message, 'error');
                                }
                            });
                        }
                    });
                });
            });
        });

        // Guard all addEventListener calls for null
        const cancelOrderBtn = document.getElementById('cancelOrderBtn');
        if (cancelOrderBtn) {
            cancelOrderBtn.addEventListener('click', function() {
                Swal.fire({
                    title: 'Cancel Order?',
                    text: 'Are you sure you want to cancel this order?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, cancel it!',
                    cancelButtonText: 'No, keep it'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/order/request-cancel', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId: '<%= order._id %>' })
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.status) {
                                Swal.fire('Cancelled!', data.message, 'success').then(() => location.reload());
                            } else {
                                Swal.fire('Error', data.message, 'error');
                            }
                        });
                    }
                });
            });
        }

        const returnOrderBtn = document.getElementById('returnOrderBtn');
        if (returnOrderBtn) {
            returnOrderBtn.addEventListener('click', function() {
                const returnReasonForm = document.getElementById('returnReasonForm');
                if (returnReasonForm) returnReasonForm.style.display = 'block';
            });
        }
        const returnReasonForm = document.getElementById('returnReasonForm');
        if (returnReasonForm) {
            returnReasonForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const reasonInput = document.getElementById('returnReason');
                const reason = reasonInput ? reasonInput.value.trim() : '';
                if (!reason) {
                    Swal.fire('Error', 'Please provide a reason for return.', 'warning');
                    return;
                }
                Swal.fire({
                    title: 'Return Order?',
                    text: 'Are you sure you want to return this order?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, return it!',
                    cancelButtonText: 'No, keep it'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/order/request-return', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId: '<%= order._id %>', returnReason: reason })
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.status) {
                                Swal.fire('Return Requested!', data.message, 'success').then(() => location.reload());
                            } else {
                                Swal.fire('Error', data.message, 'error');
                            }
                        });
                    }
                });
            });
        }
        const refundOrderBtn = document.getElementById('refundOrderBtn');
        if (refundOrderBtn) {
            refundOrderBtn.addEventListener('click', function() {
                Swal.fire({
                    title: 'Request Refund?',
                    text: 'Are you sure you want to request a refund for this order?',
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, request refund!',
                    cancelButtonText: 'No'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/order/request-refund', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId: '<%= order._id %>' })
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.status) {
                                Swal.fire('Refund Requested!', data.message, 'success').then(() => location.reload());
                            } else {
                                Swal.fire('Error', data.message, 'error');
                            }
                        });
                    }
                });
            });
        }
    </script>

<%-include("../../views/partials/user/footer")%>