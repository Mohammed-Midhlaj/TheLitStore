<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
        <style>
            a {
                text-decoration: none;
            }

            .col-md-3 {
                padding: 20px;
                border: 1px solid #ddd;
                border-radius: 10px;
                margin: 10px;
            }

            .form-label {
                margin-bottom: 8px;
            }

            .form-control {
                width: 100%;
                padding: 8px;
                margin-bottom: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-sizing: border-box;
            }

            .d-grid {
                margin-top: 20px;
            }

            .btn-primary {
                background-color: #007bff;
                color: #fff;
                border: 1px solid #007bff;
                border-radius: 5px;
                padding: 10px 20px;
                cursor: pointer;
            }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }

            .pagination-container {
                text-align: center;
            }

            .pagination {
                display: inline-block;
            }

            .pagination a,
            .pagination .current-page {
                display: inline-block;
                padding: 5px 10px;
                margin: 0 2px;
                border: 1px solid #ddd;
                text-decoration: none;
                color: #333;
            }

            .pagination a:hover {
                background-color: #f5f5f5;
            }

            .error-message {
                color: red;
            }
        </style>
    </head>

    <body>
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Category</h2>
                </div>
            </div>
            <header class="card-header text-center mb-20">
                <form action="/admin/category/" method="get" class="d-inline">
                    <div class="input-group input-group-sm border border-1 border-grey rounded-pill"
                        style="width: 500px; margin-left: 230px">
                        <input type="text" class="form-control border-0 rounded-pill mt-3" id="searchInput"
                            placeholder="Search categories" name="search" />
                        <button class="btn" type="submit">Search</button>
                        <button class="btn" type="button" onclick="clearSearch('/admin/category')">Clear</button>
                    </div>
                </form>
            </header>
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Name</label>
                                    <input type="text" name="name" placeholder="Type here" class="form-control"
                                        id="product_name" required maxlength="20" />
                                    <div id="name-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" name="description" class="form-control"
                                        id="descriptionId" required></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="d-grid">
                                    <button class="btn btn-primary" type="submit" onclick="createCat()">
                                        Create category
                                    </button>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-8 ml-10">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th class="text-center"></th>
                                            <th>Name</th>
                                            <th>Description</th>
                                            <th>Offer Price</th>
                                            <th>Offer</th>
                                            <th>Status</th>
                                            <th>List/Unlist</th>
                                            <th class="text-start">Edit</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <%cat.reverse().forEach((category,index)=>{%>
                                            <tr>
                                                <td></td>
                                                <td class="text-start">
                                                    <%=category.name%>
                                                </td>
                                                <td class="text-start">
                                                    <%=category.description%>
                                                </td>
                                                <td>
                                                    <%if (category.categoryOffer) {%>
                                                        <%=category.categoryOffer%>%
                                                            <%}else{%>
                                                                0%
                                                                <%}%>
                                                </td>
                                                <td class="text-start">
                                                    <%if (category.categoryOffer===0){%>
                                                        <button class="btn btn-info" style="width: 100px">
                                                            <a href="#" class="text-white"
                                                                onclick="addoffer('<%=category._id%>')">Add Offer</a>
                                                        </button>
                                                        <%}else{%>
                                                            <button class="btn btn-info" style="width: 100px">
                                                                <a href="#" class="text-white"
                                                                    onclick="removeoffer('<%=category._id%>')">Remove</a>
                                                            </button>
                                                            <%}%>
                                                </td>
                                                <td class="text-start">
                                                    <%if(category.isListed){%>
                                                        <span class="badge rounded-pill alert-success"
                                                            style="width: 60px">Listed</span>
                                                        <%}else{%>
                                                            <span class="badge rounded-pill alert-danger"
                                                                style="width: 60px">Unlisted</span>
                                                            <%}%>
                                                </td>
                                                <td class="text-start">
                                                    <%if(category.isListed){%>
                                                        <button class="btn btn-danger unlist-category" data-id="<%=category._id%>" style="width: 70px">
                                                            Unlist
                                                        </button>
                                                        <%}else{%>
                                                            <button class="btn btn-success list-category" data-id="<%=category._id%>" style="width: 70px">
                                                                List
                                                            </button>
                                                            <%}%>
                                                </td>
                                                <td class="text-start">
                                                    <button class="btn btn-info">
                                                        <a href="/admin/editCategory?id=<%=category._id%>"
                                                            class="text-white">Edit</a>
                                                    </button>
                                                </td>
                                            </tr>
                                            <%})%>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="pagination-container">
                <% if (currentPage> 1) { %>
                    <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
                    <% } %>
                        <% for (let i=1; i <=totalPage; i++) { %>
                            <% if (i===currentPage) { %>
                                <span class="current-page">
                                    <%= i %>
                                </span>
                                <% } else { %>
                                    <a href="?page=<%= i %>">
                                        <%= i %>
                                    </a>
                                    <% } %>
                                        <% } %>
                                            <% if (currentPage < totalPage) { %>
                                                <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
                                                <% } %>
            </div>

        </section>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script>
            function clearSearch(basePath) {
                const input = document.getElementById('searchInput');
                if (input) input.value = '';
                const url = new URL(window.location.href);
                url.searchParams.delete('search');
                url.searchParams.delete('page');
                // Navigate to base path without query
                window.location.href = basePath;
            }

            function handleFormSubmit(event) {
                event.preventDefault();
                if (!validateForm()) {
                    return;
                }
                const name = document.getElementsByName("name")[0].value;
                const description = document.getElementById("descriptionId").value;

                fetch('/admin/addCategory', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, description })
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(err => {
                                throw new Error(err.error);
                            })
                        }
                        return response.json();
                    })
                    .then(data => {
                        Swal.fire({
                            icon: "success",
                            toast: true,
                            position: "top-end",
                            title: "New category created",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            // Insert new row without reload
                            const tbody = document.querySelector('tbody');
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                                <td></td>
                                <td class="text-start">${name}</td>
                                <td class="text-start">${description}</td>
                                <td>0%</td>
                                <td class="text-start">
                                    <button class="btn btn-info" style="width: 100px"><a href="#" class="text-white">Add Offer</a></button>
                                </td>
                                <td class="text-start"><span class="badge rounded-pill alert-success" style="width: 60px">Listed</span></td>
                                <td class="text-start">
                                    <button class="btn btn-danger unlist-category" style="width: 70px">Unlist</button>
                                </td>
                                <td class="text-start"><button class="btn btn-info"><a href="#" class="text-white">Edit</a></button></td>`;
                            tbody.prepend(tr);
                        });
                    })
                    .catch(error => {
                        if (error.message === "Category already exists") {
                            Swal.fire({
                                icon: 'error',
                                toast: true,
                                position: "top-end",
                                title: "Category already exists",
                                showConfirmButton: false,
                                timer: 2000
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: "Oops",
                                text: "An error occured while adding the category"
                            })
                        }
                    })
            }

            function validateForm() {
                clearErrorMessage();
                const name = document.getElementsByName("name")[0].value.trim();
                const description = document.getElementById("descriptionId").value.trim();
                isValid = true

                if (name === "") {
                    displayErrorMessage("name-error", "Please enter name");
                    isValid = false
                } else if (!/^[a-zA-Z\s-]+$/.test(name)) {
                    displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
                    isValid = false
                } else if (name.length > 20) {
                    displayErrorMessage("name-error", "Name must be at most 20 characters");
                    isValid = false
                }

                if (description === "") {
                    displayErrorMessage("description-error", "Please enter a description");
                    isValid = false;
                }
                return isValid;
            }


            function displayErrorMessage(elementId, message) {
                var errorElement = document.getElementById(elementId);
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }


            function clearErrorMessage() {
                const errorElements = document.getElementsByClassName("error-message");
                Array.from(errorElements).forEach((element) => {
                    element.innerText = "";
                    element.style.display = "none";
                });
            }


            async function addoffer(categoryId) {
                const { value: amount } = await Swal.fire({
                    title: "Offer in percentage",
                    input: "number",
                    inputLabel: "percentage",
                    inputPlaceholder: "%",
                })
                if (amount) {
                    try {
                        const response = await fetch("/admin/addCategoryOffer", {
                            method: 'POST',
                            headers: {
                                'content-type': "application/json"
                            },
                            body: JSON.stringify({
                                percentage: amount,
                                categoryId: categoryId,
                            }),
                        })
                        const data = await response.json();
                        if (response.ok && data.status === true) {
                            Swal.fire(
                                "Offer Added",
                                "The Offer has been added",
                                "success",
                            ).then(() => {
                                // Update offer cell inline
                                const row = document.querySelector(`[data-category-id="${categoryId}"]`) || document.querySelector(`button[onclick*="addoffer('${categoryId}')"]`).closest('tr');
                                if (row) {
                                    const offerCell = row.children[3];
                                    offerCell.textContent = amount + '%';
                                    const container = row.children[4];
                                    const btn = container.querySelector('button');
                                    if (btn) { btn.querySelector('a').textContent = 'Remove'; btn.onclick = function(){ removeoffer(categoryId); } }
                                }
                            })
                        } else {
                            Swal.fire("Failed", data.message || "Adding Offer failed", "error")
                        }
                    } catch (error) {
                        Swal.fire(
                            "Error",
                            "An Error occured while adding the offer",
                            "error",
                        )
                        console.log("Error adding Offer", error);
                    }
                }
            }


            async function removeoffer(categoryId) {
                try {

                    const response = await fetch("/admin/removeCategoryOffer", {
                        method: "POST",
                        headers: {
                            "content-type": "application/json"
                        },
                        body: JSON.stringify({
                            categoryId: categoryId,
                        })
                    })
                    const data = await response.json();

                    if (response.ok && data.status === true) {
                        Swal.fire(
                            "Offer removed",
                            "The offer has been removed",
                            "success",
                        ).then(() => {
                            const row = document.querySelector(`[data-category-id="${categoryId}"]`) || document.querySelector(`button[onclick*=\"removeoffer('${categoryId}')\"]`).closest('tr');
                            if (row) {
                                const offerCell = row.children[3];
                                offerCell.textContent = '0%';
                                const container = row.children[4];
                                const btn = container.querySelector('button');
                                if (btn) { btn.querySelector('a').textContent = 'Add Offer'; btn.onclick = function(){ addoffer(categoryId); } }
                            }
                        })
                    } else {
                        Swal.fire("Failed", data.message || "Removing Offer failed", "error");
                    }
                } catch (error) {
                    Swal.fire(
                        "Error",
                        "An error occured while reomving offer",
                        "error",
                    );
                    console.log("Error removing Offer", error);
                }
            }


            document.addEventListener('DOMContentLoaded', () => {
                function bindRowHandlers(scope) {
                    const unlistBtn = scope.querySelector('.unlist-category');
                    const listBtn = scope.querySelector('.list-category');
                    const badge = scope.querySelector('.badge');
                    if (unlistBtn) {
                        unlistBtn.addEventListener('click', async () => {
                            const id = unlistBtn.dataset.id;
                            try {
                                const res = await fetch('/admin/listCategory?id=' + encodeURIComponent(id), { method: 'POST' });
                                const data = await res.json();
                                if (data.status) {
                                    if (badge) { badge.className = 'badge rounded-pill alert-danger'; badge.textContent = 'Unlisted'; }
                                    unlistBtn.outerHTML = `<button class="btn btn-success list-category" data-id="${id}" style="width: 70px">List</button>`;
                                    bindRowHandlers(scope);
                                    Swal.fire('Success', 'Category Unlisted Successfully', 'success');
                                } else {
                                    Swal.fire('Error', data.message || 'Failed', 'error');
                                }
                            } catch (e) { Swal.fire('Error', 'Something went wrong', 'error'); }
                        });
                    }
                    if (listBtn) {
                        listBtn.addEventListener('click', async () => {
                            const id = listBtn.dataset.id;
                            try {
                                const res = await fetch('/admin/unlistCategory?id=' + encodeURIComponent(id), { method: 'POST' });
                                const data = await res.json();
                                if (data.status) {
                                    if (badge) { badge.className = 'badge rounded-pill alert-success'; badge.textContent = 'Listed'; }
                                    listBtn.outerHTML = `<button class="btn btn-danger unlist-category" data-id="${id}" style="width: 70px">Unlist</button>`;
                                    bindRowHandlers(scope);
                                    Swal.fire('Success', 'Category Listed Successfully', 'success');
                                } else {
                                    Swal.fire('Error', data.message || 'Failed', 'error');
                                }
                            } catch (e) { Swal.fire('Error', 'Something went wrong', 'error'); }
                        });
                    }
                }
                document.querySelectorAll('tbody tr').forEach(tr => bindRowHandlers(tr));
            });

        </script>
        <%- include("../../views/partials/admin/footer") %>