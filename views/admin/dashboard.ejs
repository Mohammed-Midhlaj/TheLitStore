<%- include("../../views/partials/admin/header") %>
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Dashboard </h2>
            </div>

        </div>
        <div class="dashboard-summary">
            <div class="summary-card">
                <h3>Total Orders</h3>
                <div class="summary-value" id="totalOrders">0</div>
            </div>
            <div class="summary-card">
                <h3>Total Sales</h3>
                <div class="summary-value">₹<span id="totalSales">0</span></div>
            </div>
            <div class="summary-card">
                <h3>Total Discount</h3>
                <div class="summary-value">₹<span id="totalDiscount">0</span></div>
            </div>
        </div>
        <div class="sales-report-section">
            <h2>Sales Report</h2>
            <div class="sales-filters">
                <select id="filterType">
                    <option value="all" selected>Show All</option>
                    <option value="daily">Daily</option>
                    <option value="weekly">Weekly</option>
                    <option value="monthly">Monthly</option>
                    <option value="yearly">Yearly</option>
                    <option value="custom">Custom</option>
                </select>
                <input type="date" id="startDate" style="display:none;">
                <input type="date" id="endDate" style="display:none;">
                <select id="itemsPerPage">
                    <option value="10">10 per page</option>
                    <option value="25">25 per page</option>
                    <option value="50">50 per page</option>
                    <option value="100">100 per page</option>
                </select>
                <button id="filterBtn" onclick="fetchSalesReport()">Filter</button>
                <button onclick="downloadReport('pdf')">Download PDF</button>
                <button onclick="downloadReport('excel')">Download Excel</button>
            </div>
            <div id="dateError" class="date-error" style="display:none; color: #d73333; font-size: 14px; margin-top: 10px;">
                End date cannot be before start date
            </div>
            <div class="sales-table-container">
                <table id="salesTable">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Order ID</th>
                            <th>Amount</th>
                            <th>Discount</th>
                            <th>Coupon Discount</th>
                            <th>Total Discount</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
                <div class="pagination-container">
                    <div class="pagination-info">
                        <span id="paginationInfo">Showing 0 of 0 results</span>
                    </div>
                    <div class="pagination-controls">
                        <button id="prevPage" onclick="changePage(-1)" disabled>Previous</button>
                        <span id="pageNumbers"></span>
                        <button id="nextPage" onclick="changePage(1)" disabled>Next</button>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script>
    let currentPage = 1;
    let currentPagination = null;
    
    function validateDates() {
        const filterType = document.getElementById('filterType').value;
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        const filterBtn = document.getElementById('filterBtn');
        const dateError = document.getElementById('dateError');
        
        if (filterType === 'custom') {
            if (startDate && endDate) {
                if (new Date(endDate) < new Date(startDate)) {
                    dateError.style.display = 'block';
                    filterBtn.disabled = true;
                    filterBtn.style.opacity = '0.5';
                    filterBtn.style.cursor = 'not-allowed';
                    return false;
                } else {
                    dateError.style.display = 'none';
                    filterBtn.disabled = false;
                    filterBtn.style.opacity = '1';
                    filterBtn.style.cursor = 'pointer';
                    return true;
                }
            } else if (startDate || endDate) {
                // If only one date is selected, allow filtering
                dateError.style.display = 'none';
                filterBtn.disabled = false;
                filterBtn.style.opacity = '1';
                filterBtn.style.cursor = 'pointer';
                return true;
            } else {
                // No dates selected
                dateError.style.display = 'none';
                filterBtn.disabled = false;
                filterBtn.style.opacity = '1';
                filterBtn.style.cursor = 'pointer';
                return true;
            }
        } else {
            // Not custom filter type
            dateError.style.display = 'none';
            filterBtn.disabled = false;
            filterBtn.style.opacity = '1';
            filterBtn.style.cursor = 'pointer';
            return true;
        }
    }
    
    function fetchSalesReport(page = 1) {
        // Validate dates before proceeding
        if (!validateDates()) {
            return;
        }
        
        currentPage = page;
        const filterType = document.getElementById('filterType').value;
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        const limit = document.getElementById('itemsPerPage').value;
        
        let url = `/admin/sales-report?filterType=${filterType}&page=${page}&limit=${limit}`;
        if (filterType === 'custom') {
            url += `&startDate=${startDate}&endDate=${endDate}`;
        }
        
        fetch(url)
            .then(res => res.json())
            .then(data => {
                document.getElementById('totalOrders').textContent = data.overallSalesCount;
                document.getElementById('totalSales').textContent = data.overallOrderAmount;
                document.getElementById('totalDiscount').textContent = data.overallDiscount;
                
                const tbody = document.querySelector('#salesTable tbody');
                tbody.innerHTML = '';
                data.orderList.forEach(order => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${new Date(order.date).toLocaleDateString()}</td>
                        <td>${order.id}</td>
                        <td>₹${order.amount}</td>
                        <td>₹${order.discount}</td>
                        <td>₹${order.couponDiscount}</td>
                        <td>₹${order.totalDiscount}</td>
                    `;
                    tbody.appendChild(tr);
                });
                
                // Update pagination
                currentPagination = data.pagination;
                updatePaginationControls();
            });
    }
    
    function updatePaginationControls() {
        if (!currentPagination) return;
        
        const { currentPage, totalPages, totalItems, itemsPerPage, hasNextPage, hasPrevPage } = currentPagination;
        
        // Update pagination info
        const startItem = (currentPage - 1) * itemsPerPage + 1;
        const endItem = Math.min(currentPage * itemsPerPage, totalItems);
        document.getElementById('paginationInfo').textContent = `Showing ${startItem} to ${endItem} of ${totalItems} results`;
        
        // Update navigation buttons
        document.getElementById('prevPage').disabled = !hasPrevPage;
        document.getElementById('nextPage').disabled = !hasNextPage;
        
        // Update page numbers
        const pageNumbersContainer = document.getElementById('pageNumbers');
        pageNumbersContainer.innerHTML = '';
        
        const maxVisiblePages = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
        let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
        
        if (endPage - startPage + 1 < maxVisiblePages) {
            startPage = Math.max(1, endPage - maxVisiblePages + 1);
        }
        
        for (let i = startPage; i <= endPage; i++) {
            const pageButton = document.createElement('button');
            pageButton.textContent = i;
            pageButton.className = i === currentPage ? 'page-btn active' : 'page-btn';
            pageButton.onclick = () => fetchSalesReport(i);
            pageNumbersContainer.appendChild(pageButton);
        }
    }
    
    function changePage(direction) {
        if (!currentPagination) return;
        
        const newPage = currentPage + direction;
        if (newPage >= 1 && newPage <= currentPagination.totalPages) {
            fetchSalesReport(newPage);
        }
    }
    
    document.getElementById('filterType').addEventListener('change', function() {
        const show = this.value === 'custom';
        document.getElementById('startDate').style.display = show ? '' : 'none';
        document.getElementById('endDate').style.display = show ? '' : 'none';
        validateDates();
    });
    
    document.getElementById('startDate').addEventListener('change', validateDates);
    document.getElementById('endDate').addEventListener('change', validateDates);
    
    document.getElementById('itemsPerPage').addEventListener('change', function() {
        fetchSalesReport(1); // Reset to first page when changing items per page
    });
    
    fetchSalesReport();

    function downloadReport(type) {
        const filterType = document.getElementById('filterType').value;
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        let url = `/admin/sales-report/download?type=${type}&filterType=${filterType}`;
        if (filterType === 'custom') {
            url += `&startDate=${startDate}&endDate=${endDate}`;
        }
        window.open(url, '_blank');
    }
    </script>
    <%- include("../../views/partials/admin/footer") %>
<style>
    .dashboard-summary {
        display: flex;
        gap: 30px;
        margin-bottom: 30px;
    }
    .summary-card {
        flex: 1;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.07);
        padding: 24px 20px;
        text-align: center;
        transition: box-shadow 0.2s;
    }
    .summary-card h3 {
        font-size: 18px;
        color: #888;
        margin-bottom: 10px;
        font-weight: 500;
    }
    .summary-card .summary-value {
        font-size: 32px;
        font-weight: bold;
        color: #d73333;
    }
    .sales-report-section {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.07);
        padding: 30px 24px;
        margin-bottom: 40px;
    }
    .sales-report-section h2 {
        font-size: 22px;
        margin-bottom: 18px;
        color: #222;
    }
    .sales-filters {
        display: flex;
        gap: 16px;
        align-items: center;
        margin-bottom: 24px;
    }
    .sales-filters select, .sales-filters input[type="date"] {
        padding: 7px 12px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 15px;
    }
    .sales-filters button {
        background: #d73333;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 8px 18px;
        font-size: 15px;
        cursor: pointer;
        transition: background 0.2s;
    }
    .sales-filters button:hover {
        background: #b32929;
    }
    .sales-filters button:disabled {
        background: #ccc;
        cursor: not-allowed;
        opacity: 0.5;
    }
    .sales-filters button:disabled:hover {
        background: #ccc;
    }
    .sales-summary {
        display: none;
    }
    .sales-table-container {
        overflow-x: auto;
        margin-top: 18px;
    }
    #salesTable {
        width: 100%;
        border-collapse: collapse;
        background: #fafbfc;
        border-radius: 8px;
        overflow: hidden;
    }
    #salesTable th, #salesTable td {
        padding: 12px 10px;
        border-bottom: 1px solid #eee;
        text-align: center;
    }
    #salesTable th {
        background: #f5f5f5;
        color: #d73333;
        font-weight: 600;
    }
    #salesTable tr:last-child td {
        border-bottom: none;
    }
    @media (max-width: 900px) {
        .dashboard-summary { flex-direction: column; gap: 16px; }
        .sales-report-section { padding: 16px 6px; }
    }
    
    /* Pagination Styles */
    .pagination-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
        padding: 15px 0;
        border-top: 1px solid #eee;
    }
    
    .pagination-info {
        color: #666;
        font-size: 14px;
    }
    
    .pagination-controls {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    
    .pagination-controls button {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 8px 16px;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.2s;
    }
    
    .pagination-controls button:hover:not(:disabled) {
        background: #f5f5f5;
        border-color: #d73333;
    }
    
    .pagination-controls button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
    
    .page-btn {
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 8px 12px;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.2s;
        min-width: 40px;
    }
    
    .page-btn:hover {
        background: #f5f5f5;
        border-color: #d73333;
    }
    
    .page-btn.active {
        background: #d73333;
        color: #fff;
        border-color: #d73333;
    }
    
    @media (max-width: 768px) {
        .pagination-container {
            flex-direction: column;
            gap: 15px;
        }
        
        .pagination-controls {
            flex-wrap: wrap;
            justify-content: center;
        }
    }
    
    .date-error {
        background: #fff5f5;
        border: 1px solid #fed7d7;
        border-radius: 5px;
        padding: 8px 12px;
        margin-top: 10px;
    }
</style>