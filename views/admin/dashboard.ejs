<%- include("../../views/partials/admin/header") %>

<section class="content-main">
    <div class="content-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="content-title card-title mb-1">Dashboard Overview</h2>
                <p class="text-muted">Monitor your store's performance and sales analytics</p>
            </div>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-primary btn-sm" onclick="refreshDashboard()">
                    <i class="material-icons md-refresh"></i> Refresh
                </button>
            </div>
        </div>
    </div>

    <!-- Stats Cards Row -->
    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-lg-6 col-md-6">
            <div class="card stat-card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon bg-primary bg-opacity-10 rounded-circle p-3 me-3">
                            <i class="material-icons md-shopping_cart text-primary fs-4"></i>
                        </div>
                        <div class="flex-grow-1">
                            <h6 class="card-subtitle mb-1 text-muted">Total Orders</h6>
                            <h3 class="card-title mb-0 fw-bold text-primary" id="totalOrders">0</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-lg-6 col-md-6">
            <div class="card stat-card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon bg-success bg-opacity-10 rounded-circle p-3 me-3">
                            <i class="material-icons md-attach_money text-success fs-4"></i>
                        </div>
                        <div class="flex-grow-1">
                            <h6 class="card-subtitle mb-1 text-muted">Total Sales</h6>
                            <h3 class="card-title mb-0 fw-bold text-success">â‚¹<span id="totalSales">0</span></h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        
        <div class="col-xl-3 col-lg-6 col-md-6">
            <div class="card stat-card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon bg-info bg-opacity-10 rounded-circle p-3 me-3">
                            <i class="material-icons md-inventory text-info fs-4"></i>
                        </div>
                        <div class="flex-grow-1">
                            <h6 class="card-subtitle mb-1 text-muted">Products</h6>
                            <h3 class="card-title mb-0 fw-bold text-info" id="totalProducts">0</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sales Report Section -->
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-white border-bottom">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="card-title mb-1">Sales Report</h5>
                    <p class="text-muted mb-0">Detailed sales analytics and reporting</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-success btn-sm" onclick="downloadReport('excel')">
                        <i class="material-icons md-download"></i> Excel
                    </button>
                    <button class="btn btn-outline-danger btn-sm" onclick="downloadReport('pdf')">
                        <i class="material-icons md-picture_as_pdf"></i> PDF
                    </button>
                </div>
            </div>
        </div>
        
        <div class="card-body">
            <!-- Filters Row -->
            <div class="row g-3 mb-4">
                <div class="col-md-3">
                    <label class="form-label fw-semibold">Filter Type</label>
                    <select id="filterType" class="form-select">
                        <option value="all" selected>Show All</option>
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="monthly">Monthly</option>
                        <option value="yearly">Yearly</option>
                        <option value="custom">Custom</option>
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label class="form-label fw-semibold">Start Date</label>
                    <input type="date" id="startDate" class="form-control" style="display:none;">
                    <div id="startDatePlaceholder" class="form-control bg-light text-muted">Select custom filter</div>
                </div>
                
                <div class="col-md-2">
                    <label class="form-label fw-semibold">End Date</label>
                    <input type="date" id="endDate" class="form-control" style="display:none;">
                    <div id="endDatePlaceholder" class="form-control bg-light text-muted">Select custom filter</div>
                </div>
                
                <div class="col-md-2">
                    <label class="form-label fw-semibold">Items per page</label>
                    <select id="itemsPerPage" class="form-select">
                        <option value="10">10 per page</option>
                        <option value="25">25 per page</option>
                        <option value="50">50 per page</option>
                        <option value="100">100 per page</option>
                    </select>
                </div>
                
                <div class="col-md-3 d-flex align-items-end">
                    <button id="filterBtn" class="btn btn-primary w-100" onclick="fetchSalesReport()">
                        <i class="material-icons md-filter_list"></i> Apply Filter
                    </button>
                </div>
            </div>

            <!-- Error Message -->
            <div id="dateError" class="alert alert-danger" style="display:none;">
                <i class="material-icons md-error"></i>
                End date cannot be before start date
            </div>

            <!-- Sales Table -->
            <div class="table-responsive">
                <table id="salesTable" class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th class="fw-semibold">Date</th>
                            <th class="fw-semibold">Order ID</th>
                            <th class="fw-semibold text-end">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center mt-4">
                <div class="text-muted">
                    <span id="paginationInfo">Showing 0 of 0 results</span>
                </div>
                <div class="d-flex gap-2">
                    <button id="prevPage" class="btn btn-outline-secondary btn-sm" onclick="changePage(-1)" disabled>
                        <i class="material-icons md-chevron_left"></i> Previous
                    </button>
                    <div id="pageNumbers" class="d-flex gap-1"></div>
                    <button id="nextPage" class="btn btn-outline-secondary btn-sm" onclick="changePage(1)" disabled>
                        Next <i class="material-icons md-chevron_right"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
/* Custom Dashboard Styles */
.stat-card {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border-radius: 12px;
}

.stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
}

.stat-icon {
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.card {
    border-radius: 12px;
    overflow: hidden;
}

.card-header {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-bottom: 1px solid #dee2e6;
}

.form-control, .form-select {
    border-radius: 8px;
    border: 1px solid #dee2e6;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.form-control:focus, .form-select:focus {
    border-color: #0d6efd;
    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
}

.btn {
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.2s ease;
}

.btn-primary {
    background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);
    border: none;
}

.btn-primary:hover {
    background: linear-gradient(135deg, #0b5ed7 0%, #0a58ca 100%);
    transform: translateY(-1px);
}

.table {
    border-radius: 8px;
    overflow: hidden;
}

.table thead th {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-bottom: 2px solid #dee2e6;
    font-weight: 600;
    color: #495057;
}

.table tbody tr:hover {
    background-color: #f8f9fa;
}

.page-btn {
    border-radius: 6px;
    min-width: 40px;
    height: 38px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
}

.page-btn.active {
    background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);
    border-color: #0d6efd;
}

.alert {
    border-radius: 8px;
    border: none;
}

.alert-danger {
    background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
    color: #721c24;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .stat-card .d-flex {
        flex-direction: column;
        text-align: center;
    }
    
    .stat-icon {
        margin: 0 auto 1rem auto;
    }
    
    .card-header .d-flex {
        flex-direction: column;
        gap: 1rem;
    }
}
</style>

<script>
let currentPage = 1;
let currentPagination = null;

function refreshDashboard() {
    fetchSalesReport(1);
    // Add loading animation
    const btn = event.target.closest('button');
    const originalText = btn.innerHTML;
    btn.innerHTML = '<i class="material-icons md-refresh rotating"></i> Refreshing...';
    btn.disabled = true;
    
    setTimeout(() => {
        btn.innerHTML = originalText;
        btn.disabled = false;
    }, 1000);
}

function validateDates() {
    const filterType = document.getElementById('filterType').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const filterBtn = document.getElementById('filterBtn');
    const dateError = document.getElementById('dateError');
    
    if (filterType === 'custom') {
        if (startDate && endDate) {
            if (new Date(endDate) < new Date(startDate)) {
                dateError.style.display = 'block';
                filterBtn.disabled = true;
                filterBtn.style.opacity = '0.5';
                return false;
            } else {
                dateError.style.display = 'none';
                filterBtn.disabled = false;
                filterBtn.style.opacity = '1';
                return true;
            }
        } else if (startDate || endDate) {
            dateError.style.display = 'none';
            filterBtn.disabled = false;
            filterBtn.style.opacity = '1';
            return true;
        } else {
            dateError.style.display = 'none';
            filterBtn.disabled = false;
            filterBtn.style.opacity = '1';
            return true;
        }
    } else {
        dateError.style.display = 'none';
        filterBtn.disabled = false;
        filterBtn.style.opacity = '1';
        return true;
    }
}

function fetchSalesReport(page = 1) {
    if (!validateDates()) {
        return;
    }
    
    currentPage = page;
    const filterType = document.getElementById('filterType').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const limit = document.getElementById('itemsPerPage').value;
    
    // Show loading state
    const tbody = document.querySelector('#salesTable tbody');
    tbody.innerHTML = '<tr><td colspan="3" class="text-center py-4"><div class="spinner-border text-primary" role="status"></div><div class="mt-2">Loading...</div></td></tr>';
    
    let url = `/admin/sales-report?filterType=${filterType}&page=${page}&limit=${limit}`;
    if (filterType === 'custom') {
        url += `&startDate=${startDate}&endDate=${endDate}`;
    }
    
    fetch(url)
        .then(res => res.json())
        .then(data => {
            document.getElementById('totalOrders').textContent = data.overallSalesCount;
            document.getElementById('totalSales').textContent = data.overallOrderAmount;
            
            tbody.innerHTML = '';
            if (data.orderList.length === 0) {
                tbody.innerHTML = '<tr><td colspan="3" class="text-center py-4 text-muted">No orders found for the selected criteria</td></tr>';
            } else {
                data.orderList.forEach(order => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td><i class="material-icons md-calendar_today text-muted me-2"></i>${new Date(order.date).toLocaleDateString()}</td>
                        <td><span class="badge bg-light text-dark">#${order.id}</span></td>
                        <td class="text-end fw-bold text-success">â‚¹${order.amount}</td>
                    `;
                    tbody.appendChild(tr);
                });
            }
            
            currentPagination = data.pagination;
            updatePaginationControls();
        })
        .catch(error => {
            tbody.innerHTML = '<tr><td colspan="3" class="text-center py-4 text-danger">Error loading data. Please try again.</td></tr>';
            console.error('Error:', error);
        });
}

function updatePaginationControls() {
    if (!currentPagination) return;
    
    const { currentPage, totalPages, totalItems, itemsPerPage, hasNextPage, hasPrevPage } = currentPagination;
    
    const startItem = (currentPage - 1) * itemsPerPage + 1;
    const endItem = Math.min(currentPage * itemsPerPage, totalItems);
    document.getElementById('paginationInfo').textContent = `Showing ${startItem} to ${endItem} of ${totalItems} results`;
    
    document.getElementById('prevPage').disabled = !hasPrevPage;
    document.getElementById('nextPage').disabled = !hasNextPage;
    
    const pageNumbersContainer = document.getElementById('pageNumbers');
    pageNumbersContainer.innerHTML = '';
    
    const maxVisiblePages = 5;
    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
    
    if (endPage - startPage + 1 < maxVisiblePages) {
        startPage = Math.max(1, endPage - maxVisiblePages + 1);
    }
    
    for (let i = startPage; i <= endPage; i++) {
        const pageButton = document.createElement('button');
        pageButton.textContent = i;
        pageButton.className = i === currentPage ? 'btn btn-primary btn-sm page-btn' : 'btn btn-outline-secondary btn-sm page-btn';
        pageButton.onclick = () => fetchSalesReport(i);
        pageNumbersContainer.appendChild(pageButton);
    }
}

function changePage(direction) {
    if (!currentPagination) return;
    
    const newPage = currentPage + direction;
    if (newPage >= 1 && newPage <= currentPagination.totalPages) {
        fetchSalesReport(newPage);
    }
}

function downloadReport(type) {
    const filterType = document.getElementById('filterType').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    let url = `/admin/sales-report/download?type=${type}&filterType=${filterType}`;
    if (filterType === 'custom') {
        url += `&startDate=${startDate}&endDate=${endDate}`;
    }
    window.open(url, '_blank');
}

// Event Listeners
document.getElementById('filterType').addEventListener('change', function() {
    const show = this.value === 'custom';
    document.getElementById('startDate').style.display = show ? 'block' : 'none';
    document.getElementById('endDate').style.display = show ? 'block' : 'none';
    document.getElementById('startDatePlaceholder').style.display = show ? 'none' : 'block';
    document.getElementById('endDatePlaceholder').style.display = show ? 'none' : 'block';
    validateDates();
});

document.getElementById('startDate').addEventListener('change', validateDates);
document.getElementById('endDate').addEventListener('change', validateDates);

document.getElementById('itemsPerPage').addEventListener('change', function() {
    fetchSalesReport(1);
});

// Initialize dashboard
document.addEventListener('DOMContentLoaded', function() {
    fetchSalesReport();
});

// Add rotating animation for refresh icon
const style = document.createElement('style');
style.textContent = `
    @keyframes rotate {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
    .rotating {
        animation: rotate 1s linear infinite;
    }
`;
document.head.appendChild(style);
</script>

<%- include("../../views/partials/admin/footer") %>